{
  "lockFileVersion": 3,
  "moduleFileHash": "86229858338d7554d15dc2505c43071069b90acee8a19b966b2e12636d29536f",
  "flags": {
    "cmdRegistries": [
      "https://bcr.bazel.build/"
    ],
    "cmdModuleOverrides": {},
    "allowedYankedVersions": [],
    "envVarAllowedYankedVersions": "",
    "ignoreDevDependency": false,
    "directDependenciesMode": "WARNING",
    "compatibilityMode": "ERROR"
  },
  "localOverrideHashes": {
    "bazel_tools": "922ea6752dc9105de5af957f7a99a6933c0a6a712d23df6aad16a9c399f7e787"
  },
  "moduleDepGraph": {
    "<root>": {
      "name": "bazel7_go_grpc",
      "version": "1.0.0",
      "key": "<root>",
      "repoName": "bazel7_go_grpc",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_go//go:extensions.bzl",
          "extensionName": "go_sdk",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 13,
            "column": 23
          },
          "imports": {},
          "devImports": [],
          "tags": [
            {
              "tagName": "download",
              "attributeValues": {
                "version": "1.21.5"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 14,
                "column": 16
              }
            },
            {
              "tagName": "host",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 17,
                "column": 12
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@gazelle//:extensions.bzl",
          "extensionName": "go_deps",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 21,
            "column": 24
          },
          "imports": {
            "org_golang_google_genproto_googleapis_api": "org_golang_google_genproto_googleapis_api",
            "org_golang_google_grpc": "org_golang_google_grpc",
            "org_golang_google_protobuf": "org_golang_google_protobuf",
            "org_uber_go_zap": "org_uber_go_zap"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "from_file",
              "attributeValues": {
                "go_mod": "//:go.mod"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 22,
                "column": 18
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "buildifier_prebuilt": "buildifier_prebuilt@6.3.3",
        "grpc": "grpc@1.48.1",
        "com_google_protobuf": "protobuf@21.7",
        "rules_go": "rules_go@0.43.0",
        "rules_proto": "rules_proto@6.0.0-rc1",
        "gazelle": "gazelle@0.34.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      }
    },
    "buildifier_prebuilt@6.3.3": {
      "name": "buildifier_prebuilt",
      "version": "6.3.3",
      "key": "buildifier_prebuilt@6.3.3",
      "repoName": "buildifier_prebuilt",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@buildifier_prebuilt_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@buildifier_prebuilt//:defs.bzl",
          "extensionName": "buildifier_prebuilt_deps_extension",
          "usingModule": "buildifier_prebuilt@6.3.3",
          "location": {
            "file": "https://bcr.bazel.build/modules/buildifier_prebuilt/6.3.3/MODULE.bazel",
            "line": 10,
            "column": 32
          },
          "imports": {
            "buildifier_prebuilt_toolchains": "buildifier_prebuilt_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.4.1",
        "platforms": "platforms@0.0.7",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "buildifier_prebuilt~6.3.3",
          "urls": [
            "https://github.com/keith/buildifier-prebuilt/archive/refs/tags/6.3.3.tar.gz"
          ],
          "integrity": "sha256-crW7CFOqxZfM5kgu5sYlEzGOfywAULx8MZ110D2KOHU=",
          "strip_prefix": "buildifier-prebuilt-6.3.3",
          "remote_patches": {
            "https://bcr.bazel.build/modules/buildifier_prebuilt/6.3.3/patches/module_dot_bazel_version.patch": "sha256-4C0YgqP2NkE8mjj9JWrXgQ6bTGFR8GeU1aFbRG33SWU="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "grpc@1.48.1": {
      "name": "grpc",
      "version": "1.48.1",
      "key": "grpc@1.48.1",
      "repoName": "com_github_grpc_grpc",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@com_github_grpc_grpc//bazel:grpc_deps.bzl",
          "extensionName": "grpc_repo_deps_ext",
          "usingModule": "grpc@1.48.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/grpc/1.48.1/MODULE.bazel",
            "line": 20,
            "column": 35
          },
          "imports": {
            "com_envoyproxy_protoc_gen_validate": "com_envoyproxy_protoc_gen_validate",
            "com_google_googleapis": "com_google_googleapis",
            "com_github_cncf_udpa": "com_github_cncf_udpa",
            "envoy_api": "envoy_api"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@com_github_grpc_grpc//bazel:grpc_extra_deps.bzl",
          "extensionName": "grpc_extra_deps_ext",
          "usingModule": "grpc@1.48.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/grpc/1.48.1/MODULE.bazel",
            "line": 30,
            "column": 36
          },
          "imports": {
            "com_google_googleapis_imports": "com_google_googleapis_imports"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.4.1",
        "boringssl": "boringssl@0.0.0-20211025-d4f1ab9",
        "com_github_cares_cares": "c-ares@1.15.0",
        "com_google_absl": "abseil-cpp@20220623.1",
        "com_google_protobuf": "protobuf@21.7",
        "com_googlesource_code_re2": "re2@2021-09-01",
        "rules_proto": "rules_proto@6.0.0-rc1",
        "upb": "upb@0.0.0-20220923-a547704",
        "zlib": "zlib@1.3",
        "rules_java": "rules_java@7.1.0",
        "io_bazel_rules_go": "rules_go@0.43.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "grpc~1.48.1",
          "urls": [
            "https://github.com/grpc/grpc/archive/refs/tags/v1.48.1.tar.gz"
          ],
          "integrity": "sha256-MgNmZl0ZAnzah7I2jAOTkAajfgOIv9EJHI0qlvvJO9g=",
          "strip_prefix": "grpc-1.48.1",
          "remote_patches": {
            "https://bcr.bazel.build/modules/grpc/1.48.1/patches/adopt_bzlmod.patch": "sha256-A5ftSJ/R0TNxKNHqyO0gg3uCGfwJ4TlfUaLt48cREXo="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "protobuf@21.7": {
      "name": "protobuf",
      "version": "21.7",
      "key": "protobuf@21.7",
      "repoName": "protobuf",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_jvm_external//:extensions.bzl",
          "extensionName": "maven",
          "usingModule": "protobuf@21.7",
          "location": {
            "file": "https://bcr.bazel.build/modules/protobuf/21.7/MODULE.bazel",
            "line": 22,
            "column": 22
          },
          "imports": {
            "maven": "maven"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "install",
              "attributeValues": {
                "name": "maven",
                "artifacts": [
                  "com.google.code.findbugs:jsr305:3.0.2",
                  "com.google.code.gson:gson:2.8.9",
                  "com.google.errorprone:error_prone_annotations:2.3.2",
                  "com.google.j2objc:j2objc-annotations:1.3",
                  "com.google.guava:guava:31.1-jre",
                  "com.google.guava:guava-testlib:31.1-jre",
                  "com.google.truth:truth:1.1.2",
                  "junit:junit:4.13.2",
                  "org.mockito:mockito-core:4.3.1"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/21.7/MODULE.bazel",
                "line": 24,
                "column": 14
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.4.1",
        "rules_python": "rules_python@0.10.2",
        "rules_cc": "rules_cc@0.0.9",
        "rules_proto": "rules_proto@6.0.0-rc1",
        "rules_java": "rules_java@7.1.0",
        "rules_pkg": "rules_pkg@0.7.0",
        "com_google_abseil": "abseil-cpp@20220623.1",
        "zlib": "zlib@1.3",
        "upb": "upb@0.0.0-20220923-a547704",
        "rules_jvm_external": "rules_jvm_external@4.4.2",
        "com_google_googletest": "googletest@1.11.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "protobuf~21.7",
          "urls": [
            "https://github.com/protocolbuffers/protobuf/releases/download/v21.7/protobuf-all-21.7.zip"
          ],
          "integrity": "sha256-VJOiH17T/FAuZv7GuUScBqVRztYwAvpIkDxA36jeeko=",
          "strip_prefix": "protobuf-21.7",
          "remote_patches": {
            "https://bcr.bazel.build/modules/protobuf/21.7/patches/add_module_dot_bazel.patch": "sha256-q3V2+eq0v2XF0z8z+V+QF4cynD6JvHI1y3kI/+rzl5s=",
            "https://bcr.bazel.build/modules/protobuf/21.7/patches/add_module_dot_bazel_for_examples.patch": "sha256-O7YP6s3lo/1opUiO0jqXYORNHdZ/2q3hjz1QGy8QdIU=",
            "https://bcr.bazel.build/modules/protobuf/21.7/patches/relative_repo_names.patch": "sha256-RK9RjW8T5UJNG7flIrnFiNE9vKwWB+8uWWtJqXYT0w4=",
            "https://bcr.bazel.build/modules/protobuf/21.7/patches/add_missing_files.patch": "sha256-Hyne4DG2u5bXcWHNxNMirA2QFAe/2Cl8oMm1XJdkQIY="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_go@0.43.0": {
      "name": "rules_go",
      "version": "0.43.0",
      "key": "rules_go@0.43.0",
      "repoName": "io_bazel_rules_go",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@go_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@io_bazel_rules_go//go/private:extensions.bzl",
          "extensionName": "non_module_dependencies",
          "usingModule": "rules_go@0.43.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_go/0.43.0/MODULE.bazel",
            "line": 14,
            "column": 40
          },
          "imports": {
            "io_bazel_rules_nogo": "io_bazel_rules_nogo"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@io_bazel_rules_go//go:extensions.bzl",
          "extensionName": "go_sdk",
          "usingModule": "rules_go@0.43.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_go/0.43.0/MODULE.bazel",
            "line": 20,
            "column": 23
          },
          "imports": {
            "go_toolchains": "go_toolchains"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "download",
              "attributeValues": {
                "name": "go_default_sdk",
                "version": "1.21.1"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_go/0.43.0/MODULE.bazel",
                "line": 21,
                "column": 16
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@gazelle//:extensions.bzl",
          "extensionName": "go_deps",
          "usingModule": "rules_go@0.43.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_go/0.43.0/MODULE.bazel",
            "line": 31,
            "column": 24
          },
          "imports": {
            "com_github_gogo_protobuf": "com_github_gogo_protobuf",
            "com_github_golang_mock": "com_github_golang_mock",
            "com_github_golang_protobuf": "com_github_golang_protobuf",
            "org_golang_google_genproto": "org_golang_google_genproto",
            "org_golang_google_grpc": "org_golang_google_grpc",
            "org_golang_google_protobuf": "org_golang_google_protobuf",
            "org_golang_x_net": "org_golang_x_net"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "from_file",
              "attributeValues": {
                "go_mod": "//:go.mod"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_go/0.43.0/MODULE.bazel",
                "line": 32,
                "column": 18
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "github.com/gogo/protobuf",
                "sum": "h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=",
                "version": "v1.3.2"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_go/0.43.0/MODULE.bazel",
                "line": 33,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_features": "bazel_features@1.1.1",
        "bazel_skylib": "bazel_skylib@1.4.1",
        "platforms": "platforms@0.0.7",
        "rules_proto": "rules_proto@6.0.0-rc1",
        "com_google_protobuf": "protobuf@21.7",
        "gazelle": "gazelle@0.34.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_go~0.43.0",
          "urls": [
            "https://github.com/bazelbuild/rules_go/releases/download/v0.43.0/rules_go-v0.43.0.zip"
          ],
          "integrity": "sha256-1qtrV+SMCVI+kwUPE2mPcIQoz9XmGSUuNp03evZZdwc=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_proto@6.0.0-rc1": {
      "name": "rules_proto",
      "version": "6.0.0-rc1",
      "key": "rules_proto@6.0.0-rc1",
      "repoName": "rules_proto",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_license": "rules_license@0.0.7",
        "bazel_skylib": "bazel_skylib@1.4.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_proto~6.0.0-rc1",
          "urls": [
            "https://github.com/bazelbuild/rules_proto/releases/download/6.0.0-rc1/rules_proto-6.0.0-rc1.tar.gz"
          ],
          "integrity": "sha256-kEqAl/rkKmkMjgjYBSEOQMzLBp9fmg9nJ89PqnvtLJw=",
          "strip_prefix": "rules_proto-6.0.0-rc1",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_proto/6.0.0-rc1/patches/module_dot_bazel_version.patch": "sha256-OepRECTunWiz3WREvMK/pOvpt/HRZ6g87fKfokcnQGE="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "gazelle@0.34.0": {
      "name": "gazelle",
      "version": "0.34.0",
      "key": "gazelle@0.34.0",
      "repoName": "bazel_gazelle",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@io_bazel_rules_go//go:extensions.bzl",
          "extensionName": "go_sdk",
          "usingModule": "gazelle@0.34.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/gazelle/0.34.0/MODULE.bazel",
            "line": 12,
            "column": 23
          },
          "imports": {
            "go_host_compatible_sdk_label": "go_host_compatible_sdk_label"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_gazelle//internal/bzlmod:non_module_deps.bzl",
          "extensionName": "non_module_deps",
          "usingModule": "gazelle@0.34.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/gazelle/0.34.0/MODULE.bazel",
            "line": 20,
            "column": 32
          },
          "imports": {
            "bazel_gazelle_go_repository_cache": "bazel_gazelle_go_repository_cache",
            "bazel_gazelle_go_repository_tools": "bazel_gazelle_go_repository_tools",
            "bazel_gazelle_is_bazel_module": "bazel_gazelle_is_bazel_module"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_gazelle//:extensions.bzl",
          "extensionName": "go_deps",
          "usingModule": "gazelle@0.34.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/gazelle/0.34.0/MODULE.bazel",
            "line": 28,
            "column": 24
          },
          "imports": {
            "com_github_bazelbuild_buildtools": "com_github_bazelbuild_buildtools",
            "com_github_bmatcuk_doublestar_v4": "com_github_bmatcuk_doublestar_v4",
            "com_github_fsnotify_fsnotify": "com_github_fsnotify_fsnotify",
            "com_github_google_go_cmp": "com_github_google_go_cmp",
            "com_github_pmezard_go_difflib": "com_github_pmezard_go_difflib",
            "org_golang_x_mod": "org_golang_x_mod",
            "org_golang_x_sync": "org_golang_x_sync",
            "org_golang_x_tools": "org_golang_x_tools",
            "org_golang_x_tools_go_vcs": "org_golang_x_tools_go_vcs",
            "bazel_gazelle_go_repository_config": "bazel_gazelle_go_repository_config"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "from_file",
              "attributeValues": {
                "go_mod": "//:go.mod"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/gazelle/0.34.0/MODULE.bazel",
                "line": 29,
                "column": 18
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "golang.org/x/tools",
                "sum": "h1:Iey4qkscZuv0VvIt8E0neZjtPVQFSc870HQ448QgEmQ=",
                "version": "v0.13.0"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/gazelle/0.34.0/MODULE.bazel",
                "line": 33,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.4.1",
        "com_google_protobuf": "protobuf@21.7",
        "io_bazel_rules_go": "rules_go@0.43.0",
        "rules_proto": "rules_proto@6.0.0-rc1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "gazelle~0.34.0",
          "urls": [
            "https://github.com/bazelbuild/bazel-gazelle/releases/download/v0.34.0/bazel-gazelle-v0.34.0.tar.gz"
          ],
          "integrity": "sha256-tzh/cu+1n4duTarkLx05EtDUVWPqx8sj0d4LCUq1iM8=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "bazel_tools@_": {
      "name": "bazel_tools",
      "version": "",
      "key": "bazel_tools@_",
      "repoName": "bazel_tools",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@local_config_cc_toolchains//:all",
        "@local_config_sh//:local_sh_toolchain"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_tools//tools/cpp:cc_configure.bzl",
          "extensionName": "cc_configure_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 17,
            "column": 29
          },
          "imports": {
            "local_config_cc": "local_config_cc",
            "local_config_cc_toolchains": "local_config_cc_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/osx:xcode_configure.bzl",
          "extensionName": "xcode_configure_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 21,
            "column": 32
          },
          "imports": {
            "local_config_xcode": "local_config_xcode"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_java//java:extensions.bzl",
          "extensionName": "toolchains",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 24,
            "column": 32
          },
          "imports": {
            "local_jdk": "local_jdk",
            "remote_java_tools": "remote_java_tools",
            "remote_java_tools_linux": "remote_java_tools_linux",
            "remote_java_tools_windows": "remote_java_tools_windows",
            "remote_java_tools_darwin_x86_64": "remote_java_tools_darwin_x86_64",
            "remote_java_tools_darwin_arm64": "remote_java_tools_darwin_arm64"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/sh:sh_configure.bzl",
          "extensionName": "sh_configure_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 35,
            "column": 39
          },
          "imports": {
            "local_config_sh": "local_config_sh"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/test:extensions.bzl",
          "extensionName": "remote_coverage_tools_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 39,
            "column": 48
          },
          "imports": {
            "remote_coverage_tools": "remote_coverage_tools"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/android:android_extensions.bzl",
          "extensionName": "remote_android_tools_extensions",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 42,
            "column": 42
          },
          "imports": {
            "android_gmaven_r8": "android_gmaven_r8",
            "android_tools": "android_tools"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "rules_cc": "rules_cc@0.0.9",
        "rules_java": "rules_java@7.1.0",
        "rules_license": "rules_license@0.0.7",
        "rules_proto": "rules_proto@6.0.0-rc1",
        "rules_python": "rules_python@0.10.2",
        "platforms": "platforms@0.0.7",
        "com_google_protobuf": "protobuf@21.7",
        "zlib": "zlib@1.3",
        "build_bazel_apple_support": "apple_support@1.5.0",
        "local_config_platform": "local_config_platform@_"
      }
    },
    "local_config_platform@_": {
      "name": "local_config_platform",
      "version": "",
      "key": "local_config_platform@_",
      "repoName": "local_config_platform",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.7",
        "bazel_tools": "bazel_tools@_"
      }
    },
    "bazel_skylib@1.4.1": {
      "name": "bazel_skylib",
      "version": "1.4.1",
      "key": "bazel_skylib@1.4.1",
      "repoName": "bazel_skylib",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "//toolchains/unittest:cmd_toolchain",
        "//toolchains/unittest:bash_toolchain"
      ],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.7",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "bazel_skylib~1.4.1",
          "urls": [
            "https://github.com/bazelbuild/bazel-skylib/releases/download/1.4.1/bazel-skylib-1.4.1.tar.gz"
          ],
          "integrity": "sha256-uKFSeQF3QYCvx5iusoxGNL3M8ZxNmOe90c550f6aqtc=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "platforms@0.0.7": {
      "name": "platforms",
      "version": "0.0.7",
      "key": "platforms@0.0.7",
      "repoName": "platforms",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_license": "rules_license@0.0.7",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "platforms",
          "urls": [
            "https://github.com/bazelbuild/platforms/releases/download/0.0.7/platforms-0.0.7.tar.gz"
          ],
          "integrity": "sha256-OlYcmee9vpFzqmU/1Xn+hJ8djWc5V4CrR3Cx84FDHVE=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "boringssl@0.0.0-20211025-d4f1ab9": {
      "name": "boringssl",
      "version": "0.0.0-20211025-d4f1ab9",
      "key": "boringssl@0.0.0-20211025-d4f1ab9",
      "repoName": "boringssl",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_cc": "rules_cc@0.0.9",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "boringssl~0.0.0-20211025-d4f1ab9",
          "urls": [
            "https://github.com/google/boringssl/archive/d4f1ab983065e4616319f59c723c7b9870021fae.tar.gz"
          ],
          "integrity": "sha256-M26QowTRWQe0pyMgTvDHwMabsdfxLqYP6MMwUWZjC/I=",
          "strip_prefix": "boringssl-d4f1ab983065e4616319f59c723c7b9870021fae",
          "remote_patches": {
            "https://bcr.bazel.build/modules/boringssl/0.0.0-20211025-d4f1ab9/patches/module_dot_bazel.patch": "sha256-TJNetd16OGSjVWvmBAL4iZM/uatmXvjR0AsjHrPRGUA="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "c-ares@1.15.0": {
      "name": "c-ares",
      "version": "1.15.0",
      "key": "c-ares@1.15.0",
      "repoName": "c-ares",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.4.1",
        "com_github_grpc_grpc": "grpc@1.48.1",
        "platforms": "platforms@0.0.7",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "c-ares~1.15.0",
          "urls": [
            "https://github.com/c-ares/c-ares/releases/download/cares-1_15_0/c-ares-1.15.0.tar.gz"
          ],
          "integrity": "sha256-bNuXhx8pMFMMl963z1yPpL5aCwLHzqbnx2Z2cqOdaFI=",
          "strip_prefix": "c-ares-1.15.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/c-ares/1.15.0/patches/add_build_file.patch": "sha256-+SUCFxBIkR0GE9FRFPps/e6AnA9cQIGANBHK14UAKwQ=",
            "https://bcr.bazel.build/modules/c-ares/1.15.0/patches/module_dot_bazel.patch": "sha256-SVQeSrnvd7IishMhmg8S3PK6/6bbt1IqwVEqKDfdYgk="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "abseil-cpp@20220623.1": {
      "name": "abseil-cpp",
      "version": "20220623.1",
      "key": "abseil-cpp@20220623.1",
      "repoName": "abseil-cpp",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_cc": "rules_cc@0.0.9",
        "platforms": "platforms@0.0.7",
        "bazel_skylib": "bazel_skylib@1.4.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "abseil-cpp~20220623.1",
          "urls": [
            "https://github.com/abseil/abseil-cpp/archive/refs/tags/20220623.1.tar.gz"
          ],
          "integrity": "sha256-kayH0wzG15+auXTFGHSnBN6cJkfED2kyWXMpooIhe6g=",
          "strip_prefix": "abseil-cpp-20220623.1",
          "remote_patches": {
            "https://bcr.bazel.build/modules/abseil-cpp/20220623.1/patches/module_dot_bazel.patch": "sha256-tlJ3iNkZbNoP3r94FbnW9Y+Op0jKDC0KR7v7EFEA0Sk="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "re2@2021-09-01": {
      "name": "re2",
      "version": "2021-09-01",
      "key": "re2@2021-09-01",
      "repoName": "re2",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_cc": "rules_cc@0.0.9",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "re2~2021-09-01",
          "urls": [
            "https://github.com/google/re2/archive/refs/tags/2021-09-01.zip"
          ],
          "integrity": "sha256-739ELobFx96SqV7QdeOUNre0fFKk5+5jV1IU7slG/C8=",
          "strip_prefix": "re2-2021-09-01",
          "remote_patches": {
            "https://bcr.bazel.build/modules/re2/2021-09-01/patches/module_dot_bazel.patch": "sha256-uLpoNV5fETcQxOqvD9PtPv4CHYhetfPSkPIJPXoLXcg="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "upb@0.0.0-20220923-a547704": {
      "name": "upb",
      "version": "0.0.0-20220923-a547704",
      "key": "upb@0.0.0-20220923-a547704",
      "repoName": "upb",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.4.1",
        "rules_proto": "rules_proto@6.0.0-rc1",
        "com_google_protobuf": "protobuf@21.7",
        "com_google_absl": "abseil-cpp@20220623.1",
        "platforms": "platforms@0.0.7",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "upb~0.0.0-20220923-a547704",
          "urls": [
            "https://github.com/protocolbuffers/upb/archive/a5477045acaa34586420942098f5fecd3570f577.tar.gz"
          ],
          "integrity": "sha256-z39x6v+QskwaKLSWRan/A6mmwecTQpHOcJActj5zZLU=",
          "strip_prefix": "upb-a5477045acaa34586420942098f5fecd3570f577",
          "remote_patches": {
            "https://bcr.bazel.build/modules/upb/0.0.0-20220923-a547704/patches/module_dot_bazel.patch": "sha256-wH4mNS6ZYy+8uC0HoAft/c7SDsq2Kxf+J8dUakXhaB0="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "zlib@1.3": {
      "name": "zlib",
      "version": "1.3",
      "key": "zlib@1.3",
      "repoName": "zlib",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.7",
        "rules_cc": "rules_cc@0.0.9",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "zlib~1.3",
          "urls": [
            "https://github.com/madler/zlib/releases/download/v1.3/zlib-1.3.tar.gz"
          ],
          "integrity": "sha256-/wukwpIBPbwnUws6geH5qBPNOd4Byl4Pi/NVcC76WT4=",
          "strip_prefix": "zlib-1.3",
          "remote_patches": {
            "https://bcr.bazel.build/modules/zlib/1.3/patches/add_build_file.patch": "sha256-Ei+FYaaOo7A3jTKunMEodTI0Uw5NXQyZEcboMC8JskY=",
            "https://bcr.bazel.build/modules/zlib/1.3/patches/module_dot_bazel.patch": "sha256-fPWLM+2xaF/kuy+kZc1YTfW6hNjrkG400Ho7gckuyJk="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "rules_java@7.1.0": {
      "name": "rules_java",
      "version": "7.1.0",
      "key": "rules_java@7.1.0",
      "repoName": "rules_java",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "//toolchains:all",
        "@local_jdk//:runtime_toolchain_definition",
        "@local_jdk//:bootstrap_runtime_toolchain_definition",
        "@remotejdk11_linux_toolchain_config_repo//:all",
        "@remotejdk11_linux_aarch64_toolchain_config_repo//:all",
        "@remotejdk11_linux_ppc64le_toolchain_config_repo//:all",
        "@remotejdk11_linux_s390x_toolchain_config_repo//:all",
        "@remotejdk11_macos_toolchain_config_repo//:all",
        "@remotejdk11_macos_aarch64_toolchain_config_repo//:all",
        "@remotejdk11_win_toolchain_config_repo//:all",
        "@remotejdk11_win_arm64_toolchain_config_repo//:all",
        "@remotejdk17_linux_toolchain_config_repo//:all",
        "@remotejdk17_linux_aarch64_toolchain_config_repo//:all",
        "@remotejdk17_linux_ppc64le_toolchain_config_repo//:all",
        "@remotejdk17_linux_s390x_toolchain_config_repo//:all",
        "@remotejdk17_macos_toolchain_config_repo//:all",
        "@remotejdk17_macos_aarch64_toolchain_config_repo//:all",
        "@remotejdk17_win_toolchain_config_repo//:all",
        "@remotejdk17_win_arm64_toolchain_config_repo//:all",
        "@remotejdk21_linux_toolchain_config_repo//:all",
        "@remotejdk21_linux_aarch64_toolchain_config_repo//:all",
        "@remotejdk21_macos_toolchain_config_repo//:all",
        "@remotejdk21_macos_aarch64_toolchain_config_repo//:all",
        "@remotejdk21_win_toolchain_config_repo//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_java//java:extensions.bzl",
          "extensionName": "toolchains",
          "usingModule": "rules_java@7.1.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_java/7.1.0/MODULE.bazel",
            "line": 19,
            "column": 27
          },
          "imports": {
            "remote_java_tools": "remote_java_tools",
            "remote_java_tools_linux": "remote_java_tools_linux",
            "remote_java_tools_windows": "remote_java_tools_windows",
            "remote_java_tools_darwin_x86_64": "remote_java_tools_darwin_x86_64",
            "remote_java_tools_darwin_arm64": "remote_java_tools_darwin_arm64",
            "local_jdk": "local_jdk",
            "remotejdk11_linux_toolchain_config_repo": "remotejdk11_linux_toolchain_config_repo",
            "remotejdk11_linux_aarch64_toolchain_config_repo": "remotejdk11_linux_aarch64_toolchain_config_repo",
            "remotejdk11_linux_ppc64le_toolchain_config_repo": "remotejdk11_linux_ppc64le_toolchain_config_repo",
            "remotejdk11_linux_s390x_toolchain_config_repo": "remotejdk11_linux_s390x_toolchain_config_repo",
            "remotejdk11_macos_toolchain_config_repo": "remotejdk11_macos_toolchain_config_repo",
            "remotejdk11_macos_aarch64_toolchain_config_repo": "remotejdk11_macos_aarch64_toolchain_config_repo",
            "remotejdk11_win_toolchain_config_repo": "remotejdk11_win_toolchain_config_repo",
            "remotejdk11_win_arm64_toolchain_config_repo": "remotejdk11_win_arm64_toolchain_config_repo",
            "remotejdk17_linux_toolchain_config_repo": "remotejdk17_linux_toolchain_config_repo",
            "remotejdk17_linux_aarch64_toolchain_config_repo": "remotejdk17_linux_aarch64_toolchain_config_repo",
            "remotejdk17_linux_ppc64le_toolchain_config_repo": "remotejdk17_linux_ppc64le_toolchain_config_repo",
            "remotejdk17_linux_s390x_toolchain_config_repo": "remotejdk17_linux_s390x_toolchain_config_repo",
            "remotejdk17_macos_toolchain_config_repo": "remotejdk17_macos_toolchain_config_repo",
            "remotejdk17_macos_aarch64_toolchain_config_repo": "remotejdk17_macos_aarch64_toolchain_config_repo",
            "remotejdk17_win_toolchain_config_repo": "remotejdk17_win_toolchain_config_repo",
            "remotejdk17_win_arm64_toolchain_config_repo": "remotejdk17_win_arm64_toolchain_config_repo",
            "remotejdk21_linux_toolchain_config_repo": "remotejdk21_linux_toolchain_config_repo",
            "remotejdk21_linux_aarch64_toolchain_config_repo": "remotejdk21_linux_aarch64_toolchain_config_repo",
            "remotejdk21_macos_toolchain_config_repo": "remotejdk21_macos_toolchain_config_repo",
            "remotejdk21_macos_aarch64_toolchain_config_repo": "remotejdk21_macos_aarch64_toolchain_config_repo",
            "remotejdk21_win_toolchain_config_repo": "remotejdk21_win_toolchain_config_repo"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "platforms": "platforms@0.0.7",
        "rules_cc": "rules_cc@0.0.9",
        "bazel_skylib": "bazel_skylib@1.4.1",
        "rules_proto": "rules_proto@6.0.0-rc1",
        "rules_license": "rules_license@0.0.7",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_java~7.1.0",
          "urls": [
            "https://github.com/bazelbuild/rules_java/releases/download/7.1.0/rules_java-7.1.0.tar.gz"
          ],
          "integrity": "sha256-o3pOX2OrgnFuXdau75iO2EYcegC46TYnImKJn1h81OE=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_python@0.10.2": {
      "name": "rules_python",
      "version": "0.10.2",
      "key": "rules_python@0.10.2",
      "repoName": "rules_python",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@bazel_tools//tools/python:autodetecting_toolchain"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_python//python:extensions.bzl",
          "extensionName": "pip_install",
          "usingModule": "rules_python@0.10.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_python/0.10.2/MODULE.bazel",
            "line": 7,
            "column": 28
          },
          "imports": {
            "pypi__click": "pypi__click",
            "pypi__colorama": "pypi__colorama",
            "pypi__installer": "pypi__installer",
            "pypi__pep517": "pypi__pep517",
            "pypi__pip": "pypi__pip",
            "pypi__pip_tools": "pypi__pip_tools",
            "pypi__setuptools": "pypi__setuptools",
            "pypi__tomli": "pypi__tomli",
            "pypi__wheel": "pypi__wheel"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_python~0.10.2",
          "urls": [
            "https://github.com/bazelbuild/rules_python/archive/refs/tags/0.10.2.tar.gz"
          ],
          "integrity": "sha256-o6bpn0l74In4HsCCiC5AJGv9Q19S9OgvN+iUSbBFc/Y=",
          "strip_prefix": "rules_python-0.10.2",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_python/0.10.2/patches/module_dot_bazel.patch": "sha256-TScILAmXmmMtjJIwhLrgNZgqGPs6G3OAzXaLXLDNFrA="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "rules_cc@0.0.9": {
      "name": "rules_cc",
      "version": "0.0.9",
      "key": "rules_cc@0.0.9",
      "repoName": "rules_cc",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@local_config_cc_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_tools//tools/cpp:cc_configure.bzl",
          "extensionName": "cc_configure_extension",
          "usingModule": "rules_cc@0.0.9",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_cc/0.0.9/MODULE.bazel",
            "line": 9,
            "column": 29
          },
          "imports": {
            "local_config_cc_toolchains": "local_config_cc_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "platforms": "platforms@0.0.7",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_cc~0.0.9",
          "urls": [
            "https://github.com/bazelbuild/rules_cc/releases/download/0.0.9/rules_cc-0.0.9.tar.gz"
          ],
          "integrity": "sha256-IDeHW5pEVtzkp50RKorohbvEqtlo5lh9ym5k86CQDN8=",
          "strip_prefix": "rules_cc-0.0.9",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_cc/0.0.9/patches/module_dot_bazel_version.patch": "sha256-mM+qzOI0SgAdaJBlWOSMwMPKpaA9b7R37Hj/tp5bb4g="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "rules_pkg@0.7.0": {
      "name": "rules_pkg",
      "version": "0.7.0",
      "key": "rules_pkg@0.7.0",
      "repoName": "rules_pkg",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_python": "rules_python@0.10.2",
        "bazel_skylib": "bazel_skylib@1.4.1",
        "rules_license": "rules_license@0.0.7",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_pkg~0.7.0",
          "urls": [
            "https://github.com/bazelbuild/rules_pkg/releases/download/0.7.0/rules_pkg-0.7.0.tar.gz"
          ],
          "integrity": "sha256-iimOgydi7aGDBZfWT+fbWBeKqEzVkm121bdE1lWJQcI=",
          "strip_prefix": "",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_pkg/0.7.0/patches/module_dot_bazel.patch": "sha256-4OaEPZwYF6iC71ZTDg6MJ7LLqX7ZA0/kK4mT+4xKqiE="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "rules_jvm_external@4.4.2": {
      "name": "rules_jvm_external",
      "version": "4.4.2",
      "key": "rules_jvm_external@4.4.2",
      "repoName": "rules_jvm_external",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_jvm_external//:non-module-deps.bzl",
          "extensionName": "non_module_deps",
          "usingModule": "rules_jvm_external@4.4.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/MODULE.bazel",
            "line": 9,
            "column": 32
          },
          "imports": {
            "io_bazel_rules_kotlin": "io_bazel_rules_kotlin"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": ":extensions.bzl",
          "extensionName": "maven",
          "usingModule": "rules_jvm_external@4.4.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/MODULE.bazel",
            "line": 16,
            "column": 22
          },
          "imports": {
            "rules_jvm_external_deps": "rules_jvm_external_deps"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "install",
              "attributeValues": {
                "name": "rules_jvm_external_deps",
                "artifacts": [
                  "com.google.cloud:google-cloud-core:1.93.10",
                  "com.google.cloud:google-cloud-storage:1.113.4",
                  "com.google.code.gson:gson:2.9.0",
                  "org.apache.maven:maven-artifact:3.8.6",
                  "software.amazon.awssdk:s3:2.17.183"
                ],
                "lock_file": "@rules_jvm_external//:rules_jvm_external_deps_install.json"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/MODULE.bazel",
                "line": 18,
                "column": 14
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.4.1",
        "io_bazel_stardoc": "stardoc@0.5.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_jvm_external~4.4.2",
          "urls": [
            "https://github.com/bazelbuild/rules_jvm_external/archive/refs/tags/4.4.2.zip"
          ],
          "integrity": "sha256-c1YC9QgT6y6pPKP15DsZWb2AshO4NqB6YqKddXZwt3s=",
          "strip_prefix": "rules_jvm_external-4.4.2",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "googletest@1.11.0": {
      "name": "googletest",
      "version": "1.11.0",
      "key": "googletest@1.11.0",
      "repoName": "googletest",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "com_google_absl": "abseil-cpp@20220623.1",
        "platforms": "platforms@0.0.7",
        "rules_cc": "rules_cc@0.0.9",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "googletest~1.11.0",
          "urls": [
            "https://github.com/google/googletest/archive/refs/tags/release-1.11.0.tar.gz"
          ],
          "integrity": "sha256-tIcL8SH/d5W6INILzdhie44Ijy0dqymaAxwQNO3ck9U=",
          "strip_prefix": "googletest-release-1.11.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/googletest/1.11.0/patches/module_dot_bazel.patch": "sha256-HuahEdI/n8KCI071sN3CEziX+7qP/Ec77IWayYunLP0="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "bazel_features@1.1.1": {
      "name": "bazel_features",
      "version": "1.1.1",
      "key": "bazel_features@1.1.1",
      "repoName": "bazel_features",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_features//private:extensions.bzl",
          "extensionName": "version_extension",
          "usingModule": "bazel_features@1.1.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/bazel_features/1.1.1/MODULE.bazel",
            "line": 6,
            "column": 24
          },
          "imports": {
            "bazel_features_globals": "bazel_features_globals",
            "bazel_features_version": "bazel_features_version"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "bazel_features~1.1.1",
          "urls": [
            "https://github.com/bazel-contrib/bazel_features/releases/download/v1.1.1/bazel_features-v1.1.1.tar.gz"
          ],
          "integrity": "sha256-YsJuQn5cvHUQJERpJ2IuOYqdzfMsZDJSOIFXCdEcEag=",
          "strip_prefix": "bazel_features-1.1.1",
          "remote_patches": {
            "https://bcr.bazel.build/modules/bazel_features/1.1.1/patches/module_dot_bazel_version.patch": "sha256-+56MAEsc7bYN/Pzhn252ZQUxiRzZg9bynXj1qpsmCYs="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_license@0.0.7": {
      "name": "rules_license",
      "version": "0.0.7",
      "key": "rules_license@0.0.7",
      "repoName": "rules_license",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_license~0.0.7",
          "urls": [
            "https://github.com/bazelbuild/rules_license/releases/download/0.0.7/rules_license-0.0.7.tar.gz"
          ],
          "integrity": "sha256-RTHezLkTY5ww5cdRKgVNXYdWmNrrddjPkPKEN1/nw2A=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "apple_support@1.5.0": {
      "name": "apple_support",
      "version": "1.5.0",
      "key": "apple_support@1.5.0",
      "repoName": "build_bazel_apple_support",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@local_config_apple_cc_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@build_bazel_apple_support//crosstool:setup.bzl",
          "extensionName": "apple_cc_configure_extension",
          "usingModule": "apple_support@1.5.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/apple_support/1.5.0/MODULE.bazel",
            "line": 17,
            "column": 35
          },
          "imports": {
            "local_config_apple_cc": "local_config_apple_cc",
            "local_config_apple_cc_toolchains": "local_config_apple_cc_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.4.1",
        "platforms": "platforms@0.0.7",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "apple_support~1.5.0",
          "urls": [
            "https://github.com/bazelbuild/apple_support/releases/download/1.5.0/apple_support.1.5.0.tar.gz"
          ],
          "integrity": "sha256-miM41vja0yRPgj8txghKA+TQ+7J8qJLclw5okNW0gYQ=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "stardoc@0.5.1": {
      "name": "stardoc",
      "version": "0.5.1",
      "key": "stardoc@0.5.1",
      "repoName": "stardoc",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.4.1",
        "rules_java": "rules_java@7.1.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "stardoc~0.5.1",
          "urls": [
            "https://github.com/bazelbuild/stardoc/releases/download/0.5.1/stardoc-0.5.1.tar.gz"
          ],
          "integrity": "sha256-qoFNrgrEALurLoiB+ZFcb0fElmS/CHxAmhX5BDjSwj4=",
          "strip_prefix": "",
          "remote_patches": {
            "https://bcr.bazel.build/modules/stardoc/0.5.1/patches/module_dot_bazel.patch": "sha256-UAULCuTpJE7SG0YrR9XLjMfxMRmbP+za3uW9ONZ5rjI="
          },
          "remote_patch_strip": 0
        }
      }
    }
  },
  "moduleExtensions": {
    "@@apple_support~1.5.0//crosstool:setup.bzl%apple_cc_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "pMLFCYaRPkgXPQ8vtuNkMfiHfPmRBy6QJfnid4sWfv0=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_apple_cc": {
            "bzlFile": "@@apple_support~1.5.0//crosstool:setup.bzl",
            "ruleClassName": "_apple_cc_autoconf",
            "attributes": {
              "name": "apple_support~1.5.0~apple_cc_configure_extension~local_config_apple_cc"
            }
          },
          "local_config_apple_cc_toolchains": {
            "bzlFile": "@@apple_support~1.5.0//crosstool:setup.bzl",
            "ruleClassName": "_apple_cc_autoconf_toolchains",
            "attributes": {
              "name": "apple_support~1.5.0~apple_cc_configure_extension~local_config_apple_cc_toolchains"
            }
          }
        }
      }
    },
    "@@bazel_features~1.1.1//private:extensions.bzl%version_extension": {
      "general": {
        "bzlTransitiveDigest": "xm7Skm1Las5saxzFWt2hbS+e68BWi+MXyt6+lKIhjPA=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "bazel_features_version": {
            "bzlFile": "@@bazel_features~1.1.1//private:version_repo.bzl",
            "ruleClassName": "version_repo",
            "attributes": {
              "name": "bazel_features~1.1.1~version_extension~bazel_features_version"
            }
          },
          "bazel_features_globals": {
            "bzlFile": "@@bazel_features~1.1.1//private:globals_repo.bzl",
            "ruleClassName": "globals_repo",
            "attributes": {
              "name": "bazel_features~1.1.1~version_extension~bazel_features_globals",
              "globals": {
                "RunEnvironmentInfo": "5.3.0",
                "DefaultInfo": "0.0.1",
                "__TestingOnly_NeverAvailable": "1000000000.0.0"
              }
            }
          }
        }
      }
    },
    "@@bazel_tools//tools/cpp:cc_configure.bzl%cc_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "O9sf6ilKWU9Veed02jG9o2HM/xgV/UAyciuFBuxrFRY=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_cc": {
            "bzlFile": "@@bazel_tools//tools/cpp:cc_configure.bzl",
            "ruleClassName": "cc_autoconf",
            "attributes": {
              "name": "bazel_tools~cc_configure_extension~local_config_cc"
            }
          },
          "local_config_cc_toolchains": {
            "bzlFile": "@@bazel_tools//tools/cpp:cc_configure.bzl",
            "ruleClassName": "cc_autoconf_toolchains",
            "attributes": {
              "name": "bazel_tools~cc_configure_extension~local_config_cc_toolchains"
            }
          }
        }
      }
    },
    "@@bazel_tools//tools/osx:xcode_configure.bzl%xcode_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "Qh2bWTU6QW6wkrd87qrU4YeY+SG37Nvw3A0PR4Y0L2Y=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_xcode": {
            "bzlFile": "@@bazel_tools//tools/osx:xcode_configure.bzl",
            "ruleClassName": "xcode_autoconf",
            "attributes": {
              "name": "bazel_tools~xcode_configure_extension~local_config_xcode",
              "xcode_locator": "@bazel_tools//tools/osx:xcode_locator.m",
              "remote_xcode": ""
            }
          }
        }
      }
    },
    "@@bazel_tools//tools/sh:sh_configure.bzl%sh_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "hp4NgmNjEg5+xgvzfh6L83bt9/aiiWETuNpwNuF1MSU=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_sh": {
            "bzlFile": "@@bazel_tools//tools/sh:sh_configure.bzl",
            "ruleClassName": "sh_config",
            "attributes": {
              "name": "bazel_tools~sh_configure_extension~local_config_sh"
            }
          }
        }
      }
    },
    "@@buildifier_prebuilt~6.3.3//:defs.bzl%buildifier_prebuilt_deps_extension": {
      "general": {
        "bzlTransitiveDigest": "hxFr9Y+nZmWympflJ/60YOO2NVcYQSkk9F3wM5Qr17Y=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "buildozer_darwin_amd64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.3.3~buildifier_prebuilt_deps_extension~buildozer_darwin_amd64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.3.3/buildozer-darwin-amd64"
              ],
              "downloaded_file_path": "buildozer",
              "executable": true,
              "sha256": "9b0bbecb3745250e5ad5a9c36da456699cb55e52999451c3c74047d2b1f0085f"
            }
          },
          "buildifier_linux_amd64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.3.3~buildifier_prebuilt_deps_extension~buildifier_linux_amd64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.3.3/buildifier-linux-amd64"
              ],
              "downloaded_file_path": "buildifier",
              "executable": true,
              "sha256": "42f798ec532c58e34401985043e660cb19d5ae994e108d19298c7d229547ffca"
            }
          },
          "buildozer_darwin_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.3.3~buildifier_prebuilt_deps_extension~buildozer_darwin_arm64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.3.3/buildozer-darwin-arm64"
              ],
              "downloaded_file_path": "buildozer",
              "executable": true,
              "sha256": "085928dd4deffa1a7fd38c66c4475e37326b2d4942408e8e3d993953ae4c626c"
            }
          },
          "buildozer_linux_amd64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.3.3~buildifier_prebuilt_deps_extension~buildozer_linux_amd64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.3.3/buildozer-linux-amd64"
              ],
              "downloaded_file_path": "buildozer",
              "executable": true,
              "sha256": "1dcdc668d7c775e5bca2d43ac37e036468ca4d139a78fe48ae207d41411c5100"
            }
          },
          "buildozer_windows_amd64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.3.3~buildifier_prebuilt_deps_extension~buildozer_windows_amd64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.3.3/buildozer-windows-amd64.exe"
              ],
              "downloaded_file_path": "buildozer.exe",
              "executable": true,
              "sha256": "fc1c4f5de391ec6d66f2119c5bd6131d572ae35e92ddffe720e42b619ab158e0"
            }
          },
          "buildozer_linux_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.3.3~buildifier_prebuilt_deps_extension~buildozer_linux_arm64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.3.3/buildozer-linux-arm64"
              ],
              "downloaded_file_path": "buildozer",
              "executable": true,
              "sha256": "94b96d6a3c52d6ef416f0eb96c8a9fe7f6a0757f0458cc8cf190dfc4a5c2d8e7"
            }
          },
          "buildifier_windows_amd64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.3.3~buildifier_prebuilt_deps_extension~buildifier_windows_amd64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.3.3/buildifier-windows-amd64.exe"
              ],
              "downloaded_file_path": "buildifier.exe",
              "executable": true,
              "sha256": "2761bebc7392d47c2862c43d85201d93efa57249ed09405fd82708867caa787b"
            }
          },
          "buildifier_prebuilt_toolchains": {
            "bzlFile": "@@buildifier_prebuilt~6.3.3//:defs.bzl",
            "ruleClassName": "_buildifier_toolchain_setup",
            "attributes": {
              "name": "buildifier_prebuilt~6.3.3~buildifier_prebuilt_deps_extension~buildifier_prebuilt_toolchains",
              "assets_json": "[{\"arch\":\"amd64\",\"name\":\"buildifier\",\"platform\":\"darwin\",\"sha256\":\"3c36a3217bd793815a907a8e5bf81c291e2d35d73c6073914640a5f42e65f73f\",\"version\":\"v6.3.3\"},{\"arch\":\"arm64\",\"name\":\"buildifier\",\"platform\":\"darwin\",\"sha256\":\"9bb366432d515814766afcf6f9010294c13876686fbbe585d5d6b4ff0ca3e982\",\"version\":\"v6.3.3\"},{\"arch\":\"amd64\",\"name\":\"buildifier\",\"platform\":\"linux\",\"sha256\":\"42f798ec532c58e34401985043e660cb19d5ae994e108d19298c7d229547ffca\",\"version\":\"v6.3.3\"},{\"arch\":\"arm64\",\"name\":\"buildifier\",\"platform\":\"linux\",\"sha256\":\"6a03a1cf525045cb686fc67cd5d64cface5092ebefca3c4c93fb6e97c64e07db\",\"version\":\"v6.3.3\"},{\"arch\":\"amd64\",\"name\":\"buildifier\",\"platform\":\"windows\",\"sha256\":\"2761bebc7392d47c2862c43d85201d93efa57249ed09405fd82708867caa787b\",\"version\":\"v6.3.3\"},{\"arch\":\"amd64\",\"name\":\"buildozer\",\"platform\":\"darwin\",\"sha256\":\"9b0bbecb3745250e5ad5a9c36da456699cb55e52999451c3c74047d2b1f0085f\",\"version\":\"v6.3.3\"},{\"arch\":\"arm64\",\"name\":\"buildozer\",\"platform\":\"darwin\",\"sha256\":\"085928dd4deffa1a7fd38c66c4475e37326b2d4942408e8e3d993953ae4c626c\",\"version\":\"v6.3.3\"},{\"arch\":\"amd64\",\"name\":\"buildozer\",\"platform\":\"linux\",\"sha256\":\"1dcdc668d7c775e5bca2d43ac37e036468ca4d139a78fe48ae207d41411c5100\",\"version\":\"v6.3.3\"},{\"arch\":\"arm64\",\"name\":\"buildozer\",\"platform\":\"linux\",\"sha256\":\"94b96d6a3c52d6ef416f0eb96c8a9fe7f6a0757f0458cc8cf190dfc4a5c2d8e7\",\"version\":\"v6.3.3\"},{\"arch\":\"amd64\",\"name\":\"buildozer\",\"platform\":\"windows\",\"sha256\":\"fc1c4f5de391ec6d66f2119c5bd6131d572ae35e92ddffe720e42b619ab158e0\",\"version\":\"v6.3.3\"}]"
            }
          },
          "buildifier_darwin_amd64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.3.3~buildifier_prebuilt_deps_extension~buildifier_darwin_amd64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.3.3/buildifier-darwin-amd64"
              ],
              "downloaded_file_path": "buildifier",
              "executable": true,
              "sha256": "3c36a3217bd793815a907a8e5bf81c291e2d35d73c6073914640a5f42e65f73f"
            }
          },
          "buildifier_darwin_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.3.3~buildifier_prebuilt_deps_extension~buildifier_darwin_arm64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.3.3/buildifier-darwin-arm64"
              ],
              "downloaded_file_path": "buildifier",
              "executable": true,
              "sha256": "9bb366432d515814766afcf6f9010294c13876686fbbe585d5d6b4ff0ca3e982"
            }
          },
          "buildifier_linux_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.3.3~buildifier_prebuilt_deps_extension~buildifier_linux_arm64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.3.3/buildifier-linux-arm64"
              ],
              "downloaded_file_path": "buildifier",
              "executable": true,
              "sha256": "6a03a1cf525045cb686fc67cd5d64cface5092ebefca3c4c93fb6e97c64e07db"
            }
          }
        }
      }
    },
    "@@gazelle~0.34.0//:extensions.bzl%go_deps": {
      "general": {
        "bzlTransitiveDigest": "bxCC2wkQKI2fVRS2z8qAkH7FpoBFV1H7+yyT3EXXdbU=",
        "accumulatedFileDigests": {
          "@@rules_go~0.43.0//:go.mod": "58f9901703af412a1a8771d283721ef391c0ca1cc6ef3c141334311965535676",
          "@@gazelle~0.34.0//:go.mod": "9ae159a385b2f244bbe964b9f91dbea6e7bd534e0b22e846655f241c65de2c49",
          "@@//:go.mod": "060c977325f4b866ee5b3ea7767587027d8e87ed82035e343cfe22524bac02d4",
          "@@//:go.sum": "3b6382078f1f6114e4b9d288762bf1565374b0bbb981ddbfc2a0962ed1c69242",
          "@@rules_go~0.43.0//:go.sum": "c6368ec1da45691f9148115d7317e740c3b32313b624b8f6545ef36b2ab4d781",
          "@@gazelle~0.34.0//:go.sum": "7469786f3930030c430969cedae951e6947cb40f4a563dac94a350659c0fedc4"
        },
        "envVariables": {},
        "generatedRepoSpecs": {
          "com_google_cloud_go_webrisk": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_webrisk",
              "importpath": "cloud.google.com/go/webrisk",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:iceR3k0BCRZgf2D/NiKviVMFfuNC9LmeNLtxUFRB/wI=",
              "replace": "",
              "version": "v1.9.4"
            }
          },
          "com_github_fsnotify_fsnotify": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_github_fsnotify_fsnotify",
              "importpath": "github.com/fsnotify/fsnotify",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=",
              "replace": "",
              "version": "v1.7.0"
            }
          },
          "com_google_cloud_go_vmmigration": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_vmmigration",
              "importpath": "cloud.google.com/go/vmmigration",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:qPNdab4aGgtaRX+51jCOtJxlJp6P26qua4o1xxUDjpc=",
              "replace": "",
              "version": "v1.7.4"
            }
          },
          "com_google_cloud_go_texttospeech": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_texttospeech",
              "importpath": "cloud.google.com/go/texttospeech",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ahrzTgr7uAbvebuhkBAAVU6kRwVD0HWsmDsvMhtad5Q=",
              "replace": "",
              "version": "v1.7.4"
            }
          },
          "com_google_cloud_go_gkeconnect": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_gkeconnect",
              "importpath": "cloud.google.com/go/gkeconnect",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:1JLpZl31YhQDQeJ98tK6QiwTpgHFYRJwpntggpQQWis=",
              "replace": "",
              "version": "v0.8.4"
            }
          },
          "com_google_cloud_go_recommendationengine": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_recommendationengine",
              "importpath": "cloud.google.com/go/recommendationengine",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:JRiwe4hvu3auuh2hujiTc2qNgPPfVp+Q8KOpsXlEzKQ=",
              "replace": "",
              "version": "v0.8.4"
            }
          },
          "com_google_cloud_go_redis": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_redis",
              "importpath": "cloud.google.com/go/redis",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:J9cEHxG9YLmA9o4jTSvWt/RuVEn6MTrPlYSCRHujxDQ=",
              "replace": "",
              "version": "v1.14.1"
            }
          },
          "com_google_cloud_go_dataproc_v2": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_dataproc_v2",
              "importpath": "cloud.google.com/go/dataproc/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:tTVP9tTxmc8fixxOd/8s6Q6Pz/+yzn7r7XdZHretQH0=",
              "replace": "",
              "version": "v2.3.0"
            }
          },
          "com_google_cloud_go_pubsublite": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_pubsublite",
              "importpath": "cloud.google.com/go/pubsublite",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:pX+idpWMIH30/K7c0epN6V703xpIcMXWRjKJsz0tYGY=",
              "replace": "",
              "version": "v1.8.1"
            }
          },
          "com_google_cloud_go_bigquery": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_bigquery",
              "importpath": "cloud.google.com/go/bigquery",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:FiULdbbzUxWD0Y4ZGPSVCDLvqRSyCIO6zKV7E2nf5uA=",
              "replace": "",
              "version": "v1.57.1"
            }
          },
          "com_google_cloud_go_documentai": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_documentai",
              "importpath": "cloud.google.com/go/documentai",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:0/S3AhS23+0qaFe3tkgMmS3STxgDgmE1jg4TvaDOZ9g=",
              "replace": "",
              "version": "v1.23.6"
            }
          },
          "com_google_cloud_go_gkebackup": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_gkebackup",
              "importpath": "cloud.google.com/go/gkebackup",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:KhnOrr9A1tXYIYeXKqCKbCI8TL2ZNGiD3dm+d7BDUBg=",
              "replace": "",
              "version": "v1.3.4"
            }
          },
          "com_google_cloud_go_dlp": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_dlp",
              "importpath": "cloud.google.com/go/dlp",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:OFlXedmPP/5//X1hBEeq3D9kUVm9fb6ywYANlpv/EsQ=",
              "replace": "",
              "version": "v1.11.1"
            }
          },
          "com_google_cloud_go_cloudtasks": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_cloudtasks",
              "importpath": "cloud.google.com/go/cloudtasks",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:5xXuFfAjg0Z5Wb81j2GAbB3e0bwroCeSF+5jBn/L650=",
              "replace": "",
              "version": "v1.12.4"
            }
          },
          "com_google_cloud_go_videointelligence": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_videointelligence",
              "importpath": "cloud.google.com/go/videointelligence",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:YS4j7lY0zxYyneTFXjBJUj2r4CFe/UoIi/PJG0Zt/Rg=",
              "replace": "",
              "version": "v1.11.4"
            }
          },
          "com_google_cloud_go_maps": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_maps",
              "importpath": "cloud.google.com/go/maps",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:WxxLo//b60nNFESefLgaBQevu8QGUmRV3+noOjCfIHs=",
              "replace": "",
              "version": "v1.6.2"
            }
          },
          "com_github_golang_mock": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_github_golang_mock",
              "importpath": "github.com/golang/mock",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ErTB+efbowRARo13NNdxyJji2egdxLGQhRaY+DUumQc=",
              "replace": "",
              "version": "v1.6.0"
            }
          },
          "com_google_cloud_go_aiplatform": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_aiplatform",
              "importpath": "cloud.google.com/go/aiplatform",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:WcZ6wDf/1qBWatmGM9Z+2BTiNjQQX54k2BekHUj93DQ=",
              "replace": "",
              "version": "v1.57.0"
            }
          },
          "com_google_cloud_go_apigateway": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_apigateway",
              "importpath": "cloud.google.com/go/apigateway",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:VVIxCtVerchHienSlaGzV6XJGtEM9828Erzyr3miUGs=",
              "replace": "",
              "version": "v1.6.4"
            }
          },
          "com_google_cloud_go_privatecatalog": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_privatecatalog",
              "importpath": "cloud.google.com/go/privatecatalog",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Vo10IpWKbNvc/z/QZPVXgCiwfjpWoZ/wbgful4Uh/4E=",
              "replace": "",
              "version": "v0.9.4"
            }
          },
          "com_google_cloud_go_datastream": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_datastream",
              "importpath": "cloud.google.com/go/datastream",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Z2sKPIB7bT2kMW5Uhxy44ZgdJzxzE5uKjavoW+EuHEE=",
              "replace": "",
              "version": "v1.10.3"
            }
          },
          "org_golang_x_mod": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~org_golang_x_mod",
              "importpath": "golang.org/x/mod",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:I/DsJXRlw/8l/0c24sM9yb0T4z9liZTduXvdAWYiysY=",
              "replace": "",
              "version": "v0.13.0"
            }
          },
          "com_google_cloud_go_dialogflow": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_dialogflow",
              "importpath": "cloud.google.com/go/dialogflow",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:tLCWad8HZhlyUNfDzDP5m+oH6h/1Uvw/ei7B9AnsWMk=",
              "replace": "",
              "version": "v1.47.0"
            }
          },
          "com_google_cloud_go_osconfig": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_osconfig",
              "importpath": "cloud.google.com/go/osconfig",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:OrRCIYEAbrbXdhm13/JINn9pQchvTTIzgmOCA7uJw8I=",
              "replace": "",
              "version": "v1.12.4"
            }
          },
          "com_google_cloud_go_dataform": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_dataform",
              "importpath": "cloud.google.com/go/dataform",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:jV+EsDamGX6cE127+QAcCR/lergVeeZdEQ6DdrxW3sQ=",
              "replace": "",
              "version": "v0.9.1"
            }
          },
          "com_google_cloud_go_gsuiteaddons": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_gsuiteaddons",
              "importpath": "cloud.google.com/go/gsuiteaddons",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:uuw2Xd37yHftViSI8J2hUcCS8S7SH3ZWH09sUDLW30Q=",
              "replace": "",
              "version": "v1.6.4"
            }
          },
          "com_google_cloud_go_managedidentities": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_managedidentities",
              "importpath": "cloud.google.com/go/managedidentities",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:SF/u1IJduMqQQdJA4MDyivlIQ4SrV5qAawkr/ZEREkY=",
              "replace": "",
              "version": "v1.6.4"
            }
          },
          "com_google_cloud_go_translate": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_translate",
              "importpath": "cloud.google.com/go/translate",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:t5WXTqlrk8VVJu/i3WrYQACjzYJiff5szARHiyqqPzI=",
              "replace": "",
              "version": "v1.9.3"
            }
          },
          "com_google_cloud_go_spanner": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_spanner",
              "importpath": "cloud.google.com/go/spanner",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:xNmE0SXMSxNBuk7lRZ5G/S+A49X91zkSTt7Jn5Ptlvw=",
              "replace": "",
              "version": "v1.53.1"
            }
          },
          "com_google_cloud_go_gkemulticloud": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_gkemulticloud",
              "importpath": "cloud.google.com/go/gkemulticloud",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:NmJsNX9uQ2CT78957xnjXZb26TDIMvv+d5W2vVUt0Pg=",
              "replace": "",
              "version": "v1.0.3"
            }
          },
          "com_google_cloud_go_eventarc": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_eventarc",
              "importpath": "cloud.google.com/go/eventarc",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:+pFmO4eu4dOVipSaFBLkmqrRYG94Xl/TQZFOeohkuqU=",
              "replace": "",
              "version": "v1.13.3"
            }
          },
          "com_google_cloud_go_mediatranslation": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_mediatranslation",
              "importpath": "cloud.google.com/go/mediatranslation",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:VRCQfZB4s6jN0CSy7+cO3m4ewNwgVnaePanVCQh/9Z4=",
              "replace": "",
              "version": "v0.8.4"
            }
          },
          "com_google_cloud_go_security": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_security",
              "importpath": "cloud.google.com/go/security",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:sdnh4Islb1ljaNhpIXlIPgb3eYj70QWgPVDKOUYvzJc=",
              "replace": "",
              "version": "v1.15.4"
            }
          },
          "com_google_cloud_go_artifactregistry": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_artifactregistry",
              "importpath": "cloud.google.com/go/artifactregistry",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:/hQaadYytMdA5zBh+RciIrXZQBWK4vN7EUsrQHG+/t8=",
              "replace": "",
              "version": "v1.14.6"
            }
          },
          "com_github_pmezard_go_difflib": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_github_pmezard_go_difflib",
              "importpath": "github.com/pmezard/go-difflib",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=",
              "replace": "",
              "version": "v1.0.0"
            }
          },
          "org_golang_x_tools": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~org_golang_x_tools",
              "importpath": "golang.org/x/tools",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:jvNa2pY0M4r62jkRQ6RwEZZyPcymeL9XZMLBbV7U2nc=",
              "replace": "",
              "version": "v0.14.0"
            }
          },
          "com_google_cloud_go_functions": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_functions",
              "importpath": "cloud.google.com/go/functions",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ZjdiV3MyumRM6++1Ixu6N0VV9LAGlCX4AhW6Yjr1t+U=",
              "replace": "",
              "version": "v1.15.4"
            }
          },
          "com_google_cloud_go_vmwareengine": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_vmwareengine",
              "importpath": "cloud.google.com/go/vmwareengine",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:WY526PqM6QNmFHSqe2sRfK6gRpzWjmL98UFkql2+JDM=",
              "replace": "",
              "version": "v1.0.3"
            }
          },
          "com_github_gogo_protobuf": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_github_gogo_protobuf",
              "importpath": "github.com/gogo/protobuf",
              "build_directives": [
                "gazelle:proto disable"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=",
              "replace": "",
              "version": "v1.3.2"
            }
          },
          "com_google_cloud_go_trace": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_trace",
              "importpath": "cloud.google.com/go/trace",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:2qOAuAzNezwW3QN+t41BtkDJOG42HywL73q8x/f6fnM=",
              "replace": "",
              "version": "v1.10.4"
            }
          },
          "com_google_cloud_go_optimization": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_optimization",
              "importpath": "cloud.google.com/go/optimization",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:iFsoexcp13cGT3k/Hv8PA5aK+FP7FnbhwDO9llnruas=",
              "replace": "",
              "version": "v1.6.2"
            }
          },
          "com_google_cloud_go_apigeeregistry": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_apigeeregistry",
              "importpath": "cloud.google.com/go/apigeeregistry",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:DSaD1iiqvELag+lV4VnnqUUFd8GXELu01tKVdWZrviE=",
              "replace": "",
              "version": "v0.8.2"
            }
          },
          "org_uber_go_multierr": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~org_uber_go_multierr",
              "importpath": "go.uber.org/multierr",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=",
              "replace": "",
              "version": "v1.11.0"
            }
          },
          "com_google_cloud_go_oslogin": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_oslogin",
              "importpath": "cloud.google.com/go/oslogin",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:NP/KgsD9+0r9hmHC5wKye0vJXVwdciv219DtYKYjgqE=",
              "replace": "",
              "version": "v1.12.2"
            }
          },
          "com_google_cloud_go_ids": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_ids",
              "importpath": "cloud.google.com/go/ids",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:VuFqv2ctf/A7AyKlNxVvlHTzjrEvumWaZflUzBPz/M4=",
              "replace": "",
              "version": "v1.4.4"
            }
          },
          "com_google_cloud_go_networkmanagement": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_networkmanagement",
              "importpath": "cloud.google.com/go/networkmanagement",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:HsQk4FNKJUX04k3OI6gUsoveiHMGvDRqlaFM2xGyvqU=",
              "replace": "",
              "version": "v1.9.3"
            }
          },
          "com_google_cloud_go_video": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_video",
              "importpath": "cloud.google.com/go/video",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Xrpbm2S9UFQ1pZEeJt9Vqm5t2T/z9y/M3rNXhFoo8Is=",
              "replace": "",
              "version": "v1.20.3"
            }
          },
          "org_golang_google_genproto_googleapis_rpc": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~org_golang_google_genproto_googleapis_rpc",
              "importpath": "google.golang.org/genproto/googleapis/rpc",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:/jFB8jK5R3Sq3i/lmeZO0cATSzFfZaJq1J2Euan3XKU=",
              "replace": "",
              "version": "v0.0.0-20231212172506-995d672761c0"
            }
          },
          "com_google_cloud_go_securitycenter": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_securitycenter",
              "importpath": "cloud.google.com/go/securitycenter",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:crdn2Z2rFIy8WffmmhdlX3CwZJusqCiShtnrGFRwpeE=",
              "replace": "",
              "version": "v1.24.3"
            }
          },
          "com_github_google_go_cmp": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_github_google_go_cmp",
              "importpath": "github.com/google/go-cmp",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=",
              "replace": "",
              "version": "v0.6.0"
            }
          },
          "com_google_cloud_go_metastore": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_metastore",
              "importpath": "cloud.google.com/go/metastore",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:94l/Yxg9oBZjin2bzI79oK05feYefieDq0o5fjLSkC8=",
              "replace": "",
              "version": "v1.13.3"
            }
          },
          "com_google_cloud_go_appengine": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_appengine",
              "importpath": "cloud.google.com/go/appengine",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Qub3fqR7iA1daJWdzjp/Q0Jz0fUG0JbMc7Ui4E9IX/E=",
              "replace": "",
              "version": "v1.8.4"
            }
          },
          "com_google_cloud_go_resourcemanager": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_resourcemanager",
              "importpath": "cloud.google.com/go/resourcemanager",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:JwZ7Ggle54XQ/FVYSBrMLOQIKoIT/uer8mmNvNLK51k=",
              "replace": "",
              "version": "v1.9.4"
            }
          },
          "com_google_cloud_go_recaptchaenterprise_v2": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_recaptchaenterprise_v2",
              "importpath": "cloud.google.com/go/recaptchaenterprise/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Zrd4LvT9PaW91X/Z13H0i5RKEv9suCLuk8zp+bfOpN4=",
              "replace": "",
              "version": "v2.9.0"
            }
          },
          "com_google_cloud_go_run": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_run",
              "importpath": "cloud.google.com/go/run",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:qdfZteAm+vgzN1iXzILo3nJFQbzziudkJrvd9wCf3FQ=",
              "replace": "",
              "version": "v1.3.3"
            }
          },
          "com_google_cloud_go_longrunning": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_longrunning",
              "importpath": "cloud.google.com/go/longrunning",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:w8xEcbZodnA2BbW6sVirkkoC+1gP8wS57EUUgGS0GVg=",
              "replace": "",
              "version": "v0.5.4"
            }
          },
          "com_google_cloud_go_networksecurity": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_networksecurity",
              "importpath": "cloud.google.com/go/networksecurity",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:947tNIPnj1bMGTIEBo3fc4QrrFKS5hh0bFVsHmFm4Vo=",
              "replace": "",
              "version": "v0.9.4"
            }
          },
          "com_google_cloud_go_gkehub": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_gkehub",
              "importpath": "cloud.google.com/go/gkehub",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:J5tYUtb3r0cl2mM7+YHvV32eL+uZQ7lONyUZnPikCEo=",
              "replace": "",
              "version": "v0.14.4"
            }
          },
          "com_google_cloud_go_accesscontextmanager": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_accesscontextmanager",
              "importpath": "cloud.google.com/go/accesscontextmanager",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Yo4g2XrBETBCqyWIibN3NHNPQKUfQqti0lI+70rubeE=",
              "replace": "",
              "version": "v1.8.4"
            }
          },
          "com_google_cloud_go_notebooks": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_notebooks",
              "importpath": "cloud.google.com/go/notebooks",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:eTOTfNL1yM6L/PCtquJwjWg7ZZGR0URFaFgbs8kllbM=",
              "replace": "",
              "version": "v1.11.2"
            }
          },
          "com_google_cloud_go_domains": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_domains",
              "importpath": "cloud.google.com/go/domains",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ua4GvsDztZ5F3xqjeLKVRDeOvJshf5QFgWGg1CKti3A=",
              "replace": "",
              "version": "v0.9.4"
            }
          },
          "com_google_cloud_go_errorreporting": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_errorreporting",
              "importpath": "cloud.google.com/go/errorreporting",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:kj1XEWMu8P0qlLhm3FwcaFsUvXChV/OraZwA70trRR0=",
              "replace": "",
              "version": "v0.3.0"
            }
          },
          "org_golang_x_tools_go_vcs": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~org_golang_x_tools_go_vcs",
              "importpath": "golang.org/x/tools/go/vcs",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:cOIJqWBl99H1dH5LWizPa+0ImeeJq3t3cJjaeOWUAL4=",
              "replace": "",
              "version": "v0.1.0-deprecated"
            }
          },
          "com_google_cloud_go_assuredworkloads": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_assuredworkloads",
              "importpath": "cloud.google.com/go/assuredworkloads",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:FsLSkmYYeNuzDm8L4YPfLWV+lQaUrJmH5OuD37t1k20=",
              "replace": "",
              "version": "v1.11.4"
            }
          },
          "com_google_cloud_go_contactcenterinsights": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_contactcenterinsights",
              "importpath": "cloud.google.com/go/contactcenterinsights",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:EiGBeejtDDtr3JXt9W7xlhXyZ+REB5k2tBgVPVtmNb0=",
              "replace": "",
              "version": "v1.12.1"
            }
          },
          "com_google_cloud_go_datacatalog": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_datacatalog",
              "importpath": "cloud.google.com/go/datacatalog",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:rbYNmHwvAOOwnW2FPXYkaK3Mf1MmGqRzK0mMiIEyLdo=",
              "replace": "",
              "version": "v1.19.0"
            }
          },
          "com_google_cloud_go_baremetalsolution": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_baremetalsolution",
              "importpath": "cloud.google.com/go/baremetalsolution",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:oQiFYYCe0vwp7J8ZmF6siVKEumWtiPFJMJcGuyDVRUk=",
              "replace": "",
              "version": "v1.2.3"
            }
          },
          "com_google_cloud_go_networkconnectivity": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_networkconnectivity",
              "importpath": "cloud.google.com/go/networkconnectivity",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:e9lUkCe2BexsqsUc2bjV8+gFBpQa54J+/F3qKVtW+wA=",
              "replace": "",
              "version": "v1.14.3"
            }
          },
          "com_google_cloud_go_clouddms": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_clouddms",
              "importpath": "cloud.google.com/go/clouddms",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:xe/wJKz55VO1+L891a1EG9lVUgfHr9Ju/I3xh1nwF84=",
              "replace": "",
              "version": "v1.7.3"
            }
          },
          "org_golang_x_net": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~org_golang_x_net",
              "importpath": "golang.org/x/net",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:zTwKpTd2XuCqf8huc7Fo2iSy+4RHPd10s4KzeTnVr1c=",
              "replace": "",
              "version": "v0.19.0"
            }
          },
          "com_google_cloud_go_certificatemanager": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_certificatemanager",
              "importpath": "cloud.google.com/go/certificatemanager",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:5YMQ3Q+dqGpwUZ9X5sipsOQ1fLPsxod9HNq0+nrqc6I=",
              "replace": "",
              "version": "v1.7.4"
            }
          },
          "com_google_cloud_go_containeranalysis": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_containeranalysis",
              "importpath": "cloud.google.com/go/containeranalysis",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:5rhYLX+3a01drpREqBZVXR9YmWH45RnML++8NsCtuD8=",
              "replace": "",
              "version": "v0.11.3"
            }
          },
          "com_google_cloud_go_deploy": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_deploy",
              "importpath": "cloud.google.com/go/deploy",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:5OVjzm8MPC5kP+Ywbs0mdE0O7AXvAUXksSyHAyMFyMg=",
              "replace": "",
              "version": "v1.16.0"
            }
          },
          "com_google_cloud_go_scheduler": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_scheduler",
              "importpath": "cloud.google.com/go/scheduler",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:eMEettHlFhG5pXsoHouIM5nRT+k+zU4+GUvRtnxhuVI=",
              "replace": "",
              "version": "v1.10.5"
            }
          },
          "com_google_cloud_go_policytroubleshooter": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_policytroubleshooter",
              "importpath": "cloud.google.com/go/policytroubleshooter",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:sq+ScLP83d7GJy9+wpwYJVnY+q6xNTXwOdRIuYjvHT4=",
              "replace": "",
              "version": "v1.10.2"
            }
          },
          "org_golang_x_sync": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~org_golang_x_sync",
              "importpath": "golang.org/x/sync",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:zxkM55ReGkDlKSM+Fu41A+zmbZuaPVbGMzvvdUPznYQ=",
              "replace": "",
              "version": "v0.4.0"
            }
          },
          "com_google_cloud_go_workflows": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_workflows",
              "importpath": "cloud.google.com/go/workflows",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:qocsqETmLAl34mSa01hKZjcqAvt699gaoFbooGGMvaM=",
              "replace": "",
              "version": "v1.12.3"
            }
          },
          "com_google_cloud_go_apigeeconnect": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_apigeeconnect",
              "importpath": "cloud.google.com/go/apigeeconnect",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:jSoGITWKgAj/ssVogNE9SdsTqcXnryPzsulENSRlusI=",
              "replace": "",
              "version": "v1.6.4"
            }
          },
          "com_google_cloud_go_language": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_language",
              "importpath": "cloud.google.com/go/language",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:zg9uq2yS9PGIOdc0Kz/l+zMtOlxKWonZjjo5w5YPG2A=",
              "replace": "",
              "version": "v1.12.2"
            }
          },
          "com_google_cloud_go_memcache": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_memcache",
              "importpath": "cloud.google.com/go/memcache",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:cdex/ayDd294XBj2cGeMe6Y+H1JvhN8y78B9UW7pxuQ=",
              "replace": "",
              "version": "v1.10.4"
            }
          },
          "com_google_cloud_go_tpu": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_tpu",
              "importpath": "cloud.google.com/go/tpu",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:XIEH5c0WeYGaVy9H+UueiTaf3NI6XNdB4/v6TFQJxtE=",
              "replace": "",
              "version": "v1.6.4"
            }
          },
          "com_google_cloud_go_phishingprotection": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_phishingprotection",
              "importpath": "cloud.google.com/go/phishingprotection",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:sPLUQkHq6b4AL0czSJZ0jd6vL55GSTHz2B3Md+TCZI0=",
              "replace": "",
              "version": "v0.8.4"
            }
          },
          "com_google_cloud_go_datafusion": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_datafusion",
              "importpath": "cloud.google.com/go/datafusion",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Q90alBEYlMi66zL5gMSGQHfbZLB55mOAg03DhwTTfsk=",
              "replace": "",
              "version": "v1.7.4"
            }
          },
          "com_google_cloud_go_secretmanager": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_secretmanager",
              "importpath": "cloud.google.com/go/secretmanager",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:krnX9qpG2kR2fJ+u+uNyNo+ACVhplIAS4Pu7u+4gd+k=",
              "replace": "",
              "version": "v1.11.4"
            }
          },
          "com_google_cloud_go_recommender": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_recommender",
              "importpath": "cloud.google.com/go/recommender",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:VndmgyS/J3+izR8V8BHa7HV/uun8//ivQ3k5eVKKyyM=",
              "replace": "",
              "version": "v1.11.3"
            }
          },
          "com_google_cloud_go_kms": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_kms",
              "importpath": "cloud.google.com/go/kms",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:pj1sRfut2eRbD9pFRjNnPNg/CzJPuQAzUujMIM1vVeM=",
              "replace": "",
              "version": "v1.15.5"
            }
          },
          "com_google_cloud_go_resourcesettings": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_resourcesettings",
              "importpath": "cloud.google.com/go/resourcesettings",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:yTIL2CsZswmMfFyx2Ic77oLVzfBFoWBYgpkgiSPnC4Y=",
              "replace": "",
              "version": "v1.6.4"
            }
          },
          "com_google_cloud_go_talent": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_talent",
              "importpath": "cloud.google.com/go/talent",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:LnRJhhYkODDBoTwf6BeYkiJHFw9k+1mAFNyArwZUZAs=",
              "replace": "",
              "version": "v1.6.5"
            }
          },
          "com_google_cloud_go_beyondcorp": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_beyondcorp",
              "importpath": "cloud.google.com/go/beyondcorp",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:VXf9SnrnSmj2BF2cHkoTHvOUp8gjsz1KJFOMW7czdsY=",
              "replace": "",
              "version": "v1.0.3"
            }
          },
          "com_google_cloud_go_firestore": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_firestore",
              "importpath": "cloud.google.com/go/firestore",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:8aLcKnMPoldYU3YHgu4t2exrKhLQkqaXAGqT0ljrFVw=",
              "replace": "",
              "version": "v1.14.0"
            }
          },
          "org_golang_google_genproto_googleapis_api": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~org_golang_google_genproto_googleapis_api",
              "importpath": "google.golang.org/genproto/googleapis/api",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:s1w3X6gQxwrLEpxnLd/qXTVLgQE2yXwaOaoa6IlY/+o=",
              "replace": "",
              "version": "v0.0.0-20231212172506-995d672761c0"
            }
          },
          "org_golang_google_protobuf": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~org_golang_google_protobuf",
              "importpath": "google.golang.org/protobuf",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:g0LDEJHgrBl9N9r17Ru3sqWhkIx2NB67okBHPwC7hs8=",
              "replace": "",
              "version": "v1.31.0"
            }
          },
          "com_google_cloud_go_vision_v2": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_vision_v2",
              "importpath": "cloud.google.com/go/vision/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:T/ujUghvEaTb+YnFY/jiYwVAkMbIC8EieK0CJo6B4vg=",
              "replace": "",
              "version": "v2.7.5"
            }
          },
          "com_google_cloud_go_orgpolicy": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_orgpolicy",
              "importpath": "cloud.google.com/go/orgpolicy",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:RWuXQDr9GDYhjmrredQJC7aY7cbyqP9ZuLbq5GJGves=",
              "replace": "",
              "version": "v1.11.4"
            }
          },
          "com_google_cloud_go_shell": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_shell",
              "importpath": "cloud.google.com/go/shell",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:nurhlJcSVFZneoRZgkBEHumTYf/kFJptCK2eBUq/88M=",
              "replace": "",
              "version": "v1.7.4"
            }
          },
          "com_google_cloud_go_retail": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_retail",
              "importpath": "cloud.google.com/go/retail",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:geqdX1FNqqL2p0ADXjPpw8lq986iv5GrVcieTYafuJQ=",
              "replace": "",
              "version": "v1.14.4"
            }
          },
          "com_github_golang_protobuf": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_github_golang_protobuf",
              "importpath": "github.com/golang/protobuf",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=",
              "replace": "",
              "version": "v1.5.3"
            }
          },
          "org_uber_go_zap": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~org_uber_go_zap",
              "importpath": "go.uber.org/zap",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:sI7k6L95XOKS281NhVKOFCUNIvv9e0w4BF8N3u+tCRo=",
              "replace": "",
              "version": "v1.26.0"
            }
          },
          "com_google_cloud_go_batch": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_batch",
              "importpath": "cloud.google.com/go/batch",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:AxuSPoL2fWn/rUyvWeNCNd0V2WCr+iHRCU9QO1PUmpY=",
              "replace": "",
              "version": "v1.7.0"
            }
          },
          "com_google_cloud_go_pubsub": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_pubsub",
              "importpath": "cloud.google.com/go/pubsub",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:6SPCPvWav64tj0sVX/+npCBKhUi/UjJehy9op/V3p2g=",
              "replace": "",
              "version": "v1.33.0"
            }
          },
          "com_google_cloud_go_storagetransfer": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_storagetransfer",
              "importpath": "cloud.google.com/go/storagetransfer",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:YM1dnj5gLjfL6aDldO2s4GeU8JoAvH1xyIwXre63KmI=",
              "replace": "",
              "version": "v1.10.3"
            }
          },
          "com_google_cloud_go_iap": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_iap",
              "importpath": "cloud.google.com/go/iap",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:M4vDbQ4TLXdaljXVZSwW7XtxpwXUUarY2lIs66m0aCM=",
              "replace": "",
              "version": "v1.9.3"
            }
          },
          "com_google_cloud_go_filestore": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_filestore",
              "importpath": "cloud.google.com/go/filestore",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:/+wUEGwk3x3Kxomi2cP5dsR8+SIXxo7M0THDjreFSYo=",
              "replace": "",
              "version": "v1.8.0"
            }
          },
          "com_google_cloud_go_iam": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_iam",
              "importpath": "cloud.google.com/go/iam",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:1jTsCu4bcsNsE4iiqNT5SHwrDRCfRmIaaaVFhRveTJI=",
              "replace": "",
              "version": "v1.1.5"
            }
          },
          "com_google_cloud_go_dataplex": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_dataplex",
              "importpath": "cloud.google.com/go/dataplex",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ACVOuxwe7gP0SqEso9SLyXbcZNk5l8hjcTX+XLntI5s=",
              "replace": "",
              "version": "v1.13.0"
            }
          },
          "com_google_cloud_go_dataflow": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_dataflow",
              "importpath": "cloud.google.com/go/dataflow",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:7VmCNWcPJBS/srN2QnStTB6nu4Eb5TMcpkmtaPVhRt4=",
              "replace": "",
              "version": "v0.9.4"
            }
          },
          "com_google_cloud_go_lifesciences": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_lifesciences",
              "importpath": "cloud.google.com/go/lifesciences",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:rZEI/UxcxVKEzyoRS/kdJ1VoolNItRWjNN0Uk9tfexg=",
              "replace": "",
              "version": "v0.9.4"
            }
          },
          "com_google_cloud_go_accessapproval": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_accessapproval",
              "importpath": "cloud.google.com/go/accessapproval",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ZvLvJ952zK8pFHINjpMBY5k7LTAp/6pBf50RDMRgBUI=",
              "replace": "",
              "version": "v1.7.4"
            }
          },
          "com_google_cloud_go_container": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_container",
              "importpath": "cloud.google.com/go/container",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:jIltU529R2zBFvP8rhiG1mgeTcnT27KhU0H/1d6SQRg=",
              "replace": "",
              "version": "v1.29.0"
            }
          },
          "com_google_cloud_go_binaryauthorization": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_binaryauthorization",
              "importpath": "cloud.google.com/go/binaryauthorization",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:PHS89lcFayWIEe0/s2jTBiEOtqghCxzc7y7bRNlifBs=",
              "replace": "",
              "version": "v1.8.0"
            }
          },
          "com_github_bmatcuk_doublestar_v4": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_github_bmatcuk_doublestar_v4",
              "importpath": "github.com/bmatcuk/doublestar/v4",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:FH9SifrbvJhnlQpztAx++wlkk70QBf0iBWDwNy7PA4I=",
              "replace": "",
              "version": "v4.6.1"
            }
          },
          "com_google_cloud_go_speech": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_speech",
              "importpath": "cloud.google.com/go/speech",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:qkxNao58oF8ghAHE1Eghen7XepawYEN5zuZXYWaUTA4=",
              "replace": "",
              "version": "v1.21.0"
            }
          },
          "com_google_cloud_go_edgecontainer": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_edgecontainer",
              "importpath": "cloud.google.com/go/edgecontainer",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Szy3Q/N6bqgQGyxqjI+6xJZbmvPvnFHp3UZr95DKcQ0=",
              "replace": "",
              "version": "v1.1.4"
            }
          },
          "com_github_bazelbuild_buildtools": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_github_bazelbuild_buildtools",
              "importpath": "github.com/bazelbuild/buildtools",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:VUHCI4QRifAGYsbVJYqJndLf7YqV12YthB+PLFsEKqo=",
              "replace": "",
              "version": "v0.0.0-20231017121127-23aa65d4e117"
            }
          },
          "org_golang_google_genproto": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~org_golang_google_genproto",
              "importpath": "google.golang.org/genproto",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:YJ5pD9rF8o9Qtta0Cmy9rdBwkSjrTCT6XTiUQVOtIos=",
              "replace": "",
              "version": "v0.0.0-20231212172506-995d672761c0"
            }
          },
          "com_google_cloud_go_servicedirectory": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_servicedirectory",
              "importpath": "cloud.google.com/go/servicedirectory",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:5niCMfkw+jifmFtbBrtRedbXkJm3fubSR/KHbxSJZVM=",
              "replace": "",
              "version": "v1.11.3"
            }
          },
          "com_google_cloud_go_logging": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_logging",
              "importpath": "cloud.google.com/go/logging",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:26skQWPeYhvIasWKm48+Eq7oUqdcdbwsCVwz5Ys0FvU=",
              "replace": "",
              "version": "v1.8.1"
            }
          },
          "com_google_cloud_go_analytics": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_analytics",
              "importpath": "cloud.google.com/go/analytics",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:fnV7B8lqyEYxCU0LKk+vUL7mTlqRAq4uFlIthIdr/iA=",
              "replace": "",
              "version": "v0.21.6"
            }
          },
          "com_google_cloud_go_channel": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_channel",
              "importpath": "cloud.google.com/go/channel",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Rd4+fBrjiN6tZ4TR8R/38elkyEkz6oogGDr7jDyjmMY=",
              "replace": "",
              "version": "v1.17.3"
            }
          },
          "com_google_cloud_go": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go",
              "importpath": "cloud.google.com/go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:YHLKNupSD1KqjDbQ3+LVdQ81h/UJbJyZG203cEfnQgM=",
              "replace": "",
              "version": "v0.111.0"
            }
          },
          "com_google_cloud_go_automl": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_automl",
              "importpath": "cloud.google.com/go/automl",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:i9tOKXX+1gE7+rHpWKjiuPfGBVIYoWvLNIGpWgPtF58=",
              "replace": "",
              "version": "v1.13.4"
            }
          },
          "org_golang_google_grpc": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~org_golang_google_grpc",
              "importpath": "google.golang.org/grpc",
              "build_directives": [
                "gazelle:proto disable"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:6FQAR0kM31P6MRdeluor2w2gPaS4SVNrD/DNTxrQ15k=",
              "replace": "",
              "version": "v1.60.0"
            }
          },
          "com_google_cloud_go_datastore": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_datastore",
              "importpath": "cloud.google.com/go/datastore",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:0P9WcsQeTWjuD1H14JIY7XQscIPQ4Laje8ti96IC5vg=",
              "replace": "",
              "version": "v1.15.0"
            }
          },
          "com_google_cloud_go_area120": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_area120",
              "importpath": "cloud.google.com/go/area120",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:YnSO8m02pOIo6AEOgiOoUDVbw4pf+bg2KLHi4rky320=",
              "replace": "",
              "version": "v0.8.4"
            }
          },
          "com_google_cloud_go_dataqna": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_dataqna",
              "importpath": "cloud.google.com/go/dataqna",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:NJnu1kAPamZDs/if3bJ3+Wb6tjADHKL83NUWsaIp2zg=",
              "replace": "",
              "version": "v0.8.4"
            }
          },
          "com_google_cloud_go_billing": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_billing",
              "importpath": "cloud.google.com/go/billing",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:GvKy4xLy1zF1XPbwP5NJb2HjRxhnhxjjXxvyZ1S/IAo=",
              "replace": "",
              "version": "v1.18.0"
            }
          },
          "com_google_cloud_go_asset": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_asset",
              "importpath": "cloud.google.com/go/asset",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:uI8Bdm81s0esVWbWrTHcjFDFKNOa9aB7rI1vud1hO84=",
              "replace": "",
              "version": "v1.15.3"
            }
          },
          "com_google_cloud_go_essentialcontacts": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_essentialcontacts",
              "importpath": "cloud.google.com/go/essentialcontacts",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:S2if6wkjR4JCEAfDtIiYtD+sTz/oXjh2NUG4cgT1y/Q=",
              "replace": "",
              "version": "v1.6.5"
            }
          },
          "org_golang_x_text": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~org_golang_x_text",
              "importpath": "golang.org/x/text",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=",
              "replace": "",
              "version": "v0.14.0"
            }
          },
          "com_google_cloud_go_iot": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_iot",
              "importpath": "cloud.google.com/go/iot",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:m1WljtkZnvLTIRYW1YTOv5A6H1yKgLHR6nU7O8yf27w=",
              "replace": "",
              "version": "v1.7.4"
            }
          },
          "com_google_cloud_go_cloudbuild": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_cloudbuild",
              "importpath": "cloud.google.com/go/cloudbuild",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:9IHfEMWdCklJ1cwouoiQrnxmP0q3pH7JUt8Hqx4Qbck=",
              "replace": "",
              "version": "v1.15.0"
            }
          },
          "com_google_cloud_go_vpcaccess": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_vpcaccess",
              "importpath": "cloud.google.com/go/vpcaccess",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:zbs3V+9ux45KYq8lxxn/wgXole6SlBHHKKyZhNJoS+8=",
              "replace": "",
              "version": "v1.7.4"
            }
          },
          "com_google_cloud_go_datalabeling": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_datalabeling",
              "importpath": "cloud.google.com/go/datalabeling",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:zrq4uMmunf2KFDl/7dS6iCDBBAxBnKVDyw6+ajz3yu0=",
              "replace": "",
              "version": "v0.8.4"
            }
          },
          "bazel_gazelle_go_repository_config": {
            "bzlFile": "@@gazelle~0.34.0//internal/bzlmod:go_deps.bzl",
            "ruleClassName": "_go_repository_config",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~bazel_gazelle_go_repository_config",
              "importpaths": {
                "org_uber_go_zap": "go.uber.org/zap",
                "org_golang_google_genproto_googleapis_api": "google.golang.org/genproto/googleapis/api",
                "org_golang_google_grpc": "google.golang.org/grpc",
                "org_golang_google_protobuf": "google.golang.org/protobuf",
                "com_google_cloud_go": "cloud.google.com/go",
                "com_google_cloud_go_accessapproval": "cloud.google.com/go/accessapproval",
                "com_google_cloud_go_accesscontextmanager": "cloud.google.com/go/accesscontextmanager",
                "com_google_cloud_go_aiplatform": "cloud.google.com/go/aiplatform",
                "com_google_cloud_go_analytics": "cloud.google.com/go/analytics",
                "com_google_cloud_go_apigateway": "cloud.google.com/go/apigateway",
                "com_google_cloud_go_apigeeconnect": "cloud.google.com/go/apigeeconnect",
                "com_google_cloud_go_apigeeregistry": "cloud.google.com/go/apigeeregistry",
                "com_google_cloud_go_appengine": "cloud.google.com/go/appengine",
                "com_google_cloud_go_area120": "cloud.google.com/go/area120",
                "com_google_cloud_go_artifactregistry": "cloud.google.com/go/artifactregistry",
                "com_google_cloud_go_asset": "cloud.google.com/go/asset",
                "com_google_cloud_go_assuredworkloads": "cloud.google.com/go/assuredworkloads",
                "com_google_cloud_go_automl": "cloud.google.com/go/automl",
                "com_google_cloud_go_baremetalsolution": "cloud.google.com/go/baremetalsolution",
                "com_google_cloud_go_batch": "cloud.google.com/go/batch",
                "com_google_cloud_go_beyondcorp": "cloud.google.com/go/beyondcorp",
                "com_google_cloud_go_bigquery": "cloud.google.com/go/bigquery",
                "com_google_cloud_go_billing": "cloud.google.com/go/billing",
                "com_google_cloud_go_binaryauthorization": "cloud.google.com/go/binaryauthorization",
                "com_google_cloud_go_certificatemanager": "cloud.google.com/go/certificatemanager",
                "com_google_cloud_go_channel": "cloud.google.com/go/channel",
                "com_google_cloud_go_cloudbuild": "cloud.google.com/go/cloudbuild",
                "com_google_cloud_go_clouddms": "cloud.google.com/go/clouddms",
                "com_google_cloud_go_cloudtasks": "cloud.google.com/go/cloudtasks",
                "com_google_cloud_go_compute": "cloud.google.com/go/compute",
                "com_google_cloud_go_contactcenterinsights": "cloud.google.com/go/contactcenterinsights",
                "com_google_cloud_go_container": "cloud.google.com/go/container",
                "com_google_cloud_go_containeranalysis": "cloud.google.com/go/containeranalysis",
                "com_google_cloud_go_datacatalog": "cloud.google.com/go/datacatalog",
                "com_google_cloud_go_dataflow": "cloud.google.com/go/dataflow",
                "com_google_cloud_go_dataform": "cloud.google.com/go/dataform",
                "com_google_cloud_go_datafusion": "cloud.google.com/go/datafusion",
                "com_google_cloud_go_datalabeling": "cloud.google.com/go/datalabeling",
                "com_google_cloud_go_dataplex": "cloud.google.com/go/dataplex",
                "com_google_cloud_go_dataproc_v2": "cloud.google.com/go/dataproc/v2",
                "com_google_cloud_go_dataqna": "cloud.google.com/go/dataqna",
                "com_google_cloud_go_datastore": "cloud.google.com/go/datastore",
                "com_google_cloud_go_datastream": "cloud.google.com/go/datastream",
                "com_google_cloud_go_deploy": "cloud.google.com/go/deploy",
                "com_google_cloud_go_dialogflow": "cloud.google.com/go/dialogflow",
                "com_google_cloud_go_dlp": "cloud.google.com/go/dlp",
                "com_google_cloud_go_documentai": "cloud.google.com/go/documentai",
                "com_google_cloud_go_domains": "cloud.google.com/go/domains",
                "com_google_cloud_go_edgecontainer": "cloud.google.com/go/edgecontainer",
                "com_google_cloud_go_errorreporting": "cloud.google.com/go/errorreporting",
                "com_google_cloud_go_essentialcontacts": "cloud.google.com/go/essentialcontacts",
                "com_google_cloud_go_eventarc": "cloud.google.com/go/eventarc",
                "com_google_cloud_go_filestore": "cloud.google.com/go/filestore",
                "com_google_cloud_go_firestore": "cloud.google.com/go/firestore",
                "com_google_cloud_go_functions": "cloud.google.com/go/functions",
                "com_google_cloud_go_gkebackup": "cloud.google.com/go/gkebackup",
                "com_google_cloud_go_gkeconnect": "cloud.google.com/go/gkeconnect",
                "com_google_cloud_go_gkehub": "cloud.google.com/go/gkehub",
                "com_google_cloud_go_gkemulticloud": "cloud.google.com/go/gkemulticloud",
                "com_google_cloud_go_gsuiteaddons": "cloud.google.com/go/gsuiteaddons",
                "com_google_cloud_go_iam": "cloud.google.com/go/iam",
                "com_google_cloud_go_iap": "cloud.google.com/go/iap",
                "com_google_cloud_go_ids": "cloud.google.com/go/ids",
                "com_google_cloud_go_iot": "cloud.google.com/go/iot",
                "com_google_cloud_go_kms": "cloud.google.com/go/kms",
                "com_google_cloud_go_language": "cloud.google.com/go/language",
                "com_google_cloud_go_lifesciences": "cloud.google.com/go/lifesciences",
                "com_google_cloud_go_logging": "cloud.google.com/go/logging",
                "com_google_cloud_go_longrunning": "cloud.google.com/go/longrunning",
                "com_google_cloud_go_managedidentities": "cloud.google.com/go/managedidentities",
                "com_google_cloud_go_maps": "cloud.google.com/go/maps",
                "com_google_cloud_go_mediatranslation": "cloud.google.com/go/mediatranslation",
                "com_google_cloud_go_memcache": "cloud.google.com/go/memcache",
                "com_google_cloud_go_metastore": "cloud.google.com/go/metastore",
                "com_google_cloud_go_monitoring": "cloud.google.com/go/monitoring",
                "com_google_cloud_go_networkconnectivity": "cloud.google.com/go/networkconnectivity",
                "com_google_cloud_go_networkmanagement": "cloud.google.com/go/networkmanagement",
                "com_google_cloud_go_networksecurity": "cloud.google.com/go/networksecurity",
                "com_google_cloud_go_notebooks": "cloud.google.com/go/notebooks",
                "com_google_cloud_go_optimization": "cloud.google.com/go/optimization",
                "com_google_cloud_go_orchestration": "cloud.google.com/go/orchestration",
                "com_google_cloud_go_orgpolicy": "cloud.google.com/go/orgpolicy",
                "com_google_cloud_go_osconfig": "cloud.google.com/go/osconfig",
                "com_google_cloud_go_oslogin": "cloud.google.com/go/oslogin",
                "com_google_cloud_go_phishingprotection": "cloud.google.com/go/phishingprotection",
                "com_google_cloud_go_policytroubleshooter": "cloud.google.com/go/policytroubleshooter",
                "com_google_cloud_go_privatecatalog": "cloud.google.com/go/privatecatalog",
                "com_google_cloud_go_pubsub": "cloud.google.com/go/pubsub",
                "com_google_cloud_go_pubsublite": "cloud.google.com/go/pubsublite",
                "com_google_cloud_go_recaptchaenterprise_v2": "cloud.google.com/go/recaptchaenterprise/v2",
                "com_google_cloud_go_recommendationengine": "cloud.google.com/go/recommendationengine",
                "com_google_cloud_go_recommender": "cloud.google.com/go/recommender",
                "com_google_cloud_go_redis": "cloud.google.com/go/redis",
                "com_google_cloud_go_resourcemanager": "cloud.google.com/go/resourcemanager",
                "com_google_cloud_go_resourcesettings": "cloud.google.com/go/resourcesettings",
                "com_google_cloud_go_retail": "cloud.google.com/go/retail",
                "com_google_cloud_go_run": "cloud.google.com/go/run",
                "com_google_cloud_go_scheduler": "cloud.google.com/go/scheduler",
                "com_google_cloud_go_secretmanager": "cloud.google.com/go/secretmanager",
                "com_google_cloud_go_security": "cloud.google.com/go/security",
                "com_google_cloud_go_securitycenter": "cloud.google.com/go/securitycenter",
                "com_google_cloud_go_servicedirectory": "cloud.google.com/go/servicedirectory",
                "com_google_cloud_go_shell": "cloud.google.com/go/shell",
                "com_google_cloud_go_spanner": "cloud.google.com/go/spanner",
                "com_google_cloud_go_speech": "cloud.google.com/go/speech",
                "com_google_cloud_go_storagetransfer": "cloud.google.com/go/storagetransfer",
                "com_google_cloud_go_talent": "cloud.google.com/go/talent",
                "com_google_cloud_go_texttospeech": "cloud.google.com/go/texttospeech",
                "com_google_cloud_go_tpu": "cloud.google.com/go/tpu",
                "com_google_cloud_go_trace": "cloud.google.com/go/trace",
                "com_google_cloud_go_translate": "cloud.google.com/go/translate",
                "com_google_cloud_go_video": "cloud.google.com/go/video",
                "com_google_cloud_go_videointelligence": "cloud.google.com/go/videointelligence",
                "com_google_cloud_go_vision_v2": "cloud.google.com/go/vision/v2",
                "com_google_cloud_go_vmmigration": "cloud.google.com/go/vmmigration",
                "com_google_cloud_go_vmwareengine": "cloud.google.com/go/vmwareengine",
                "com_google_cloud_go_vpcaccess": "cloud.google.com/go/vpcaccess",
                "com_google_cloud_go_webrisk": "cloud.google.com/go/webrisk",
                "com_google_cloud_go_websecurityscanner": "cloud.google.com/go/websecurityscanner",
                "com_google_cloud_go_workflows": "cloud.google.com/go/workflows",
                "com_github_golang_protobuf": "github.com/golang/protobuf",
                "com_github_google_go_cmp": "github.com/google/go-cmp",
                "org_uber_go_multierr": "go.uber.org/multierr",
                "org_golang_x_net": "golang.org/x/net",
                "org_golang_x_sys": "golang.org/x/sys",
                "org_golang_x_text": "golang.org/x/text",
                "org_golang_google_genproto": "google.golang.org/genproto",
                "org_golang_google_genproto_googleapis_rpc": "google.golang.org/genproto/googleapis/rpc",
                "com_github_gogo_protobuf": "github.com/gogo/protobuf",
                "com_github_golang_mock": "github.com/golang/mock",
                "org_golang_x_tools": "golang.org/x/tools",
                "com_github_bazelbuild_buildtools": "github.com/bazelbuild/buildtools",
                "com_github_bmatcuk_doublestar_v4": "github.com/bmatcuk/doublestar/v4",
                "com_github_fsnotify_fsnotify": "github.com/fsnotify/fsnotify",
                "com_github_pmezard_go_difflib": "github.com/pmezard/go-difflib",
                "org_golang_x_mod": "golang.org/x/mod",
                "org_golang_x_sync": "golang.org/x/sync",
                "org_golang_x_tools_go_vcs": "golang.org/x/tools/go/vcs",
                "@rules_go~0.43.0": "github.com/bazelbuild/rules_go",
                "@gazelle~0.34.0": "github.com/bazelbuild/bazel-gazelle"
              },
              "module_names": {
                "@rules_go~0.43.0": "rules_go",
                "@gazelle~0.34.0": "gazelle"
              },
              "build_naming_conventions": {}
            }
          },
          "com_google_cloud_go_monitoring": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_monitoring",
              "importpath": "cloud.google.com/go/monitoring",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:mf2SN9qSoBtIgiMA4R/y4VADPWZA7VCNJA079qLaZQ8=",
              "replace": "",
              "version": "v1.16.3"
            }
          },
          "com_google_cloud_go_compute": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_compute",
              "importpath": "cloud.google.com/go/compute",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:6sVlXXBmbd7jNX0Ipq0trII3e4n1/MsADLK6a+aiVlk=",
              "replace": "",
              "version": "v1.23.3"
            }
          },
          "com_google_cloud_go_orchestration": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_orchestration",
              "importpath": "cloud.google.com/go/orchestration",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:kgwZ2f6qMMYIVBtUGGoU8yjYWwMTHDanLwM/CQCFaoQ=",
              "replace": "",
              "version": "v1.8.4"
            }
          },
          "org_golang_x_sys": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~org_golang_x_sys",
              "importpath": "golang.org/x/sys",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:h48lPFYpsTvQJZF4EKyI4aLHaev3CxivZmv7yZig9pc=",
              "replace": "",
              "version": "v0.15.0"
            }
          },
          "com_google_cloud_go_websecurityscanner": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.34.0~go_deps~com_google_cloud_go_websecurityscanner",
              "importpath": "cloud.google.com/go/websecurityscanner",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:5Gp7h5j7jywxLUp6NTpjNPkgZb3ngl0tUSw6ICWvtJQ=",
              "replace": "",
              "version": "v1.6.4"
            }
          }
        },
        "moduleExtensionMetadata": {
          "explicitRootModuleDirectDeps": [
            "org_uber_go_zap",
            "org_golang_google_genproto_googleapis_api",
            "org_golang_google_grpc",
            "org_golang_google_protobuf"
          ],
          "explicitRootModuleDirectDevDeps": [],
          "useAllRepos": "NO"
        }
      }
    },
    "@@gazelle~0.34.0//internal/bzlmod:non_module_deps.bzl%non_module_deps": {
      "general": {
        "bzlTransitiveDigest": "mu4qG3Z3cABoR/MzjVtNhMPN7uZPYnHj0OiYvLG9/wI=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "bazel_gazelle_is_bazel_module": {
            "bzlFile": "@@gazelle~0.34.0//internal:is_bazel_module.bzl",
            "ruleClassName": "is_bazel_module",
            "attributes": {
              "name": "gazelle~0.34.0~non_module_deps~bazel_gazelle_is_bazel_module",
              "is_bazel_module": true
            }
          },
          "bazel_gazelle_go_repository_tools": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository_tools.bzl",
            "ruleClassName": "go_repository_tools",
            "attributes": {
              "name": "gazelle~0.34.0~non_module_deps~bazel_gazelle_go_repository_tools",
              "go_cache": "@@gazelle~0.34.0~non_module_deps~bazel_gazelle_go_repository_cache//:go.env"
            }
          },
          "bazel_gazelle_go_repository_cache": {
            "bzlFile": "@@gazelle~0.34.0//internal:go_repository_cache.bzl",
            "ruleClassName": "go_repository_cache",
            "attributes": {
              "name": "gazelle~0.34.0~non_module_deps~bazel_gazelle_go_repository_cache",
              "go_sdk_name": "@rules_go~0.43.0~go_sdk~bazel7_go_grpc__download_0",
              "go_env": {}
            }
          }
        }
      }
    },
    "@@rules_go~0.43.0//go:extensions.bzl%go_sdk": {
      "os:osx,arch:x86_64": {
        "bzlTransitiveDigest": "rV0vOU4iKAaK0H9TDSJwjc2IqN1f3pDhJI4ghT3nbCo=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "go_default_sdk": {
            "bzlFile": "@@rules_go~0.43.0//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.43.0~go_sdk~go_default_sdk",
              "goos": "",
              "goarch": "",
              "sdks": {},
              "experiments": [],
              "patches": [],
              "patch_strip": 0,
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.1",
              "strip_prefix": "go"
            }
          },
          "go_host_compatible_sdk_label": {
            "bzlFile": "@@rules_go~0.43.0//go/private:extensions.bzl",
            "ruleClassName": "host_compatible_toolchain",
            "attributes": {
              "name": "rules_go~0.43.0~go_sdk~go_host_compatible_sdk_label",
              "toolchain": "@bazel7_go_grpc__download_0//:ROOT"
            }
          },
          "bazel7_go_grpc__host_0": {
            "bzlFile": "@@rules_go~0.43.0//go/private:sdk.bzl",
            "ruleClassName": "go_host_sdk_rule",
            "attributes": {
              "name": "rules_go~0.43.0~go_sdk~bazel7_go_grpc__host_0",
              "version": "",
              "experiments": []
            }
          },
          "go_toolchains": {
            "bzlFile": "@@rules_go~0.43.0//go/private:sdk.bzl",
            "ruleClassName": "go_multiple_toolchains",
            "attributes": {
              "name": "rules_go~0.43.0~go_sdk~go_toolchains",
              "prefixes": [
                "_0000_bazel7_go_grpc__download_0_",
                "_0001_bazel7_go_grpc__host_0_",
                "_0002_go_default_sdk_"
              ],
              "geese": [
                "",
                "",
                ""
              ],
              "goarchs": [
                "",
                "",
                ""
              ],
              "sdk_repos": [
                "bazel7_go_grpc__download_0",
                "bazel7_go_grpc__host_0",
                "go_default_sdk"
              ],
              "sdk_types": [
                "remote",
                "host",
                "remote"
              ],
              "sdk_versions": [
                "1.21.5",
                "",
                "1.21.1"
              ]
            }
          },
          "bazel7_go_grpc__download_0": {
            "bzlFile": "@@rules_go~0.43.0//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.43.0~go_sdk~bazel7_go_grpc__download_0",
              "goos": "",
              "goarch": "",
              "sdks": {},
              "experiments": [],
              "patches": [],
              "patch_strip": 0,
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.5",
              "strip_prefix": "go"
            }
          }
        }
      }
    },
    "@@rules_go~0.43.0//go/private:extensions.bzl%non_module_dependencies": {
      "general": {
        "bzlTransitiveDigest": "HVQFeyOKBLrSd0aeADxmzVnAYkpu/jimGzaJxoxrtio=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "org_golang_x_tools_go_vcs": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_go~0.43.0~non_module_dependencies~org_golang_x_tools_go_vcs",
              "urls": [
                "https://mirror.bazel.build/github.com/golang/tools/archive/refs/tags/go/vcs/v0.1.0-deprecated.zip",
                "https://github.com/golang/tools/archive/refs/tags/go/vcs/v0.1.0-deprecated.zip"
              ],
              "sha256": "1b389268d126467105305ae4482df0189cc80a13aaab28d0946192b4ad0737a8",
              "strip_prefix": "tools-go-vcs-v0.1.0-deprecated/go/vcs",
              "patches": [
                "@@rules_go~0.43.0//third_party:org_golang_x_tools_go_vcs-gazelle.patch"
              ],
              "patch_args": [
                "-p1"
              ]
            }
          },
          "org_golang_x_xerrors": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_go~0.43.0~non_module_dependencies~org_golang_x_xerrors",
              "urls": [
                "https://mirror.bazel.build/github.com/golang/xerrors/archive/104605ab7028f4af38a8aff92ac848a51bd53c5d.zip",
                "https://github.com/golang/xerrors/archive/104605ab7028f4af38a8aff92ac848a51bd53c5d.zip"
              ],
              "sha256": "007a5988932222d36c106636de7f0031bb26c426327a8f1253fbf17c7c9756c1",
              "strip_prefix": "xerrors-104605ab7028f4af38a8aff92ac848a51bd53c5d",
              "patches": [
                "@@rules_go~0.43.0//third_party:org_golang_x_xerrors-gazelle.patch"
              ],
              "patch_args": [
                "-p1"
              ]
            }
          },
          "gogo_special_proto": {
            "bzlFile": "@@rules_go~0.43.0//proto:gogo.bzl",
            "ruleClassName": "gogo_special_proto",
            "attributes": {
              "name": "rules_go~0.43.0~non_module_dependencies~gogo_special_proto"
            }
          },
          "org_golang_google_protobuf": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_go~0.43.0~non_module_dependencies~org_golang_google_protobuf",
              "sha256": "f5d1f6d0e9b836aceb715f1df2dc065083a55b07ecec3b01b5e89d039b14da02",
              "urls": [
                "https://mirror.bazel.build/github.com/protocolbuffers/protobuf-go/archive/refs/tags/v1.31.0.zip",
                "https://github.com/protocolbuffers/protobuf-go/archive/refs/tags/v1.31.0.zip"
              ],
              "strip_prefix": "protobuf-go-1.31.0",
              "patches": [
                "@@rules_go~0.43.0//third_party:org_golang_google_protobuf-gazelle.patch"
              ],
              "patch_args": [
                "-p1"
              ]
            }
          },
          "com_github_mwitkow_go_proto_validators": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_go~0.43.0~non_module_dependencies~com_github_mwitkow_go_proto_validators",
              "urls": [
                "https://mirror.bazel.build/github.com/mwitkow/go-proto-validators/archive/refs/tags/v0.3.2.zip",
                "https://github.com/mwitkow/go-proto-validators/archive/refs/tags/v0.3.2.zip"
              ],
              "sha256": "d8697f05a2f0eaeb65261b480e1e6035301892d9fc07ed945622f41b12a68142",
              "strip_prefix": "go-proto-validators-0.3.2"
            }
          },
          "org_golang_x_tools": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_go~0.43.0~non_module_dependencies~org_golang_x_tools",
              "urls": [
                "https://mirror.bazel.build/github.com/golang/tools/archive/refs/tags/v0.15.0.zip",
                "https://github.com/golang/tools/archive/refs/tags/v0.15.0.zip"
              ],
              "sha256": "e76a03b11719138502c7fef44d5e1dc4469f8c2fcb2ee4a1d96fb09aaea13362",
              "strip_prefix": "tools-0.15.0",
              "patches": [
                "@@rules_go~0.43.0//third_party:org_golang_x_tools-deletegopls.patch",
                "@@rules_go~0.43.0//third_party:org_golang_x_tools-gazelle.patch"
              ],
              "patch_args": [
                "-p1"
              ]
            }
          },
          "org_golang_google_genproto": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_go~0.43.0~non_module_dependencies~org_golang_google_genproto",
              "urls": [
                "https://mirror.bazel.build/github.com/googleapis/go-genproto/archive/bbf56f31fb17579209f44dda2d2567d20ff21a20.zip",
                "https://github.com/googleapis/go-genproto/archive/bbf56f31fb17579209f44dda2d2567d20ff21a20.zip"
              ],
              "sha256": "28f26095dca7821661b37190516955185c295a49c44d026de24df7755d46c389",
              "strip_prefix": "go-genproto-bbf56f31fb17579209f44dda2d2567d20ff21a20",
              "patches": [
                "@@rules_go~0.43.0//third_party:org_golang_google_genproto-gazelle.patch"
              ],
              "patch_args": [
                "-p1"
              ]
            }
          },
          "bazel_skylib": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_go~0.43.0~non_module_dependencies~bazel_skylib",
              "urls": [
                "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.5.0/bazel-skylib-1.5.0.tar.gz",
                "https://github.com/bazelbuild/bazel-skylib/releases/download/1.5.0/bazel-skylib-1.5.0.tar.gz"
              ],
              "sha256": "cd55a062e763b9349921f0f5db8c3933288dc8ba4f76dd9416aac68acee3cb94",
              "strip_prefix": ""
            }
          },
          "com_github_gogo_protobuf": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_go~0.43.0~non_module_dependencies~com_github_gogo_protobuf",
              "urls": [
                "https://mirror.bazel.build/github.com/gogo/protobuf/archive/refs/tags/v1.3.2.zip",
                "https://github.com/gogo/protobuf/archive/refs/tags/v1.3.2.zip"
              ],
              "sha256": "f89f8241af909ce3226562d135c25b28e656ae173337b3e58ede917aa26e1e3c",
              "strip_prefix": "protobuf-1.3.2",
              "patches": [
                "@@rules_go~0.43.0//third_party:com_github_gogo_protobuf-gazelle.patch"
              ],
              "patch_args": [
                "-p1"
              ]
            }
          },
          "com_github_golang_protobuf": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_go~0.43.0~non_module_dependencies~com_github_golang_protobuf",
              "urls": [
                "https://mirror.bazel.build/github.com/golang/protobuf/archive/refs/tags/v1.5.3.zip",
                "https://github.com/golang/protobuf/archive/refs/tags/v1.5.3.zip"
              ],
              "sha256": "2dced4544ae5372281e20f1e48ca76368355a01b31353724718c4d6e3dcbb430",
              "strip_prefix": "protobuf-1.5.3",
              "patches": [
                "@@rules_go~0.43.0//third_party:com_github_golang_protobuf-gazelle.patch"
              ],
              "patch_args": [
                "-p1"
              ]
            }
          },
          "io_bazel_rules_nogo": {
            "bzlFile": "@@rules_go~0.43.0//go/private:nogo.bzl",
            "ruleClassName": "go_register_nogo",
            "attributes": {
              "name": "rules_go~0.43.0~non_module_dependencies~io_bazel_rules_nogo",
              "nogo": "@io_bazel_rules_go//:default_nogo"
            }
          },
          "com_github_golang_mock": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_go~0.43.0~non_module_dependencies~com_github_golang_mock",
              "urls": [
                "https://mirror.bazel.build/github.com/golang/mock/archive/refs/tags/v1.7.0-rc.1.zip",
                "https://github.com/golang/mock/archive/refs/tags/v1.7.0-rc.1.zip"
              ],
              "patches": [
                "@@rules_go~0.43.0//third_party:com_github_golang_mock-gazelle.patch"
              ],
              "patch_args": [
                "-p1"
              ],
              "sha256": "5359c78b0c1649cf7beb3b48ff8b1d1aaf0243b22ea4789aba94805280075d8e",
              "strip_prefix": "mock-1.7.0-rc.1"
            }
          },
          "org_golang_x_sys": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_go~0.43.0~non_module_dependencies~org_golang_x_sys",
              "urls": [
                "https://mirror.bazel.build/github.com/golang/sys/archive/refs/tags/v0.14.0.zip",
                "https://github.com/golang/sys/archive/refs/tags/v0.14.0.zip"
              ],
              "sha256": "0791dad0d738ef5e92304d6691d58e37c8a643844f13dfad26d28e1adb6c61ce",
              "strip_prefix": "sys-0.14.0",
              "patches": [
                "@@rules_go~0.43.0//third_party:org_golang_x_sys-gazelle.patch"
              ],
              "patch_args": [
                "-p1"
              ]
            }
          }
        }
      }
    },
    "@@rules_java~7.1.0//java:extensions.bzl%toolchains": {
      "general": {
        "bzlTransitiveDigest": "iUIRqCK7tkhvcDJCAfPPqSd06IHG0a8HQD0xeQyVAqw=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "remotejdk21_linux_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_linux_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux//:jdk\",\n)\n"
            }
          },
          "remotejdk17_linux_s390x_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_s390x_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_s390x//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_s390x//:jdk\",\n)\n"
            }
          },
          "remotejdk17_macos_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_macos_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos//:jdk\",\n)\n"
            }
          },
          "remotejdk21_macos_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_macos_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk17_linux_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk21_macos_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_macos_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "2a7a99a3ea263dbd8d32a67d1e6e363ba8b25c645c826f5e167a02bbafaff1fa",
              "strip_prefix": "zulu21.28.85-ca-jdk21.0.0-macosx_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-macosx_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-macosx_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk17_linux_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux//:jdk\",\n)\n"
            }
          },
          "remotejdk17_macos_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_macos_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "314b04568ec0ae9b36ba03c9cbd42adc9e1265f74678923b19297d66eb84dcca",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-macosx_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_aarch64.tar.gz"
              ]
            }
          },
          "remote_java_tools_windows": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remote_java_tools_windows",
              "sha256": "c5c70c214a350f12cbf52da8270fa43ba629b795f3dd328028a38f8f0d39c2a1",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.1/java_tools_windows-v13.1.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.1/java_tools_windows-v13.1.zip"
              ]
            }
          },
          "remotejdk11_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_win",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "43408193ce2fa0862819495b5ae8541085b95660153f2adcf91a52d3a1710e83",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-win_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-win_x64.zip",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-win_x64.zip"
              ]
            }
          },
          "remotejdk11_win_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_win_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "54174439f2b3fddd11f1048c397fe7bb45d4c9d66d452d6889b013d04d21c4de",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-linux_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk17_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "b9482f2304a1a68a614dfacddcf29569a72f0fac32e6c74f83dc1b9a157b8340",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-linux_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_x64.tar.gz"
              ]
            }
          },
          "remotejdk11_linux_s390x_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_s390x_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_s390x//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_s390x//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux//:jdk\",\n)\n"
            }
          },
          "remotejdk11_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_macos",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "bcaab11cfe586fae7583c6d9d311c64384354fb2638eb9a012eca4c3f1a1d9fd",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-macosx_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_x64.tar.gz"
              ]
            }
          },
          "remotejdk11_win_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_win_arm64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "b8a28e6e767d90acf793ea6f5bed0bb595ba0ba5ebdf8b99f395266161e53ec2",
              "strip_prefix": "jdk-11.0.13+8",
              "urls": [
                "https://mirror.bazel.build/aka.ms/download-jdk/microsoft-jdk-11.0.13.8.1-windows-aarch64.zip"
              ]
            }
          },
          "remotejdk17_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_macos",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "640453e8afe8ffe0fb4dceb4535fb50db9c283c64665eebb0ba68b19e65f4b1f",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-macosx_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_x64.tar.gz"
              ]
            }
          },
          "remotejdk21_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_macos",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "9639b87db586d0c89f7a9892ae47f421e442c64b97baebdff31788fbe23265bd",
              "strip_prefix": "zulu21.28.85-ca-jdk21.0.0-macosx_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-macosx_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-macosx_x64.tar.gz"
              ]
            }
          },
          "remotejdk21_macos_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_macos_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos//:jdk\",\n)\n"
            }
          },
          "remotejdk17_macos_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_macos_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk17_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_win",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "192f2afca57701de6ec496234f7e45d971bf623ff66b8ee4a5c81582054e5637",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-win_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_x64.zip",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_x64.zip"
              ]
            }
          },
          "remotejdk11_macos_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_macos_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_ppc64le_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_ppc64le_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_ppc64le//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_ppc64le//:jdk\",\n)\n"
            }
          },
          "remotejdk21_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_linux",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "0c0eadfbdc47a7ca64aeab51b9c061f71b6e4d25d2d87674512e9b6387e9e3a6",
              "strip_prefix": "zulu21.28.85-ca-jdk21.0.0-linux_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-linux_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-linux_x64.tar.gz"
              ]
            }
          },
          "remote_java_tools_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remote_java_tools_linux",
              "sha256": "d134da9b04c9023fb6e56a5d4bffccee73f7bc9572ddc4e747778dacccd7a5a7",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.1/java_tools_linux-v13.1.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.1/java_tools_linux-v13.1.zip"
              ]
            }
          },
          "remotejdk21_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_win",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "e9959d500a0d9a7694ac243baf657761479da132f0f94720cbffd092150bd802",
              "strip_prefix": "zulu21.28.85-ca-jdk21.0.0-win_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-win_x64.zip",
                "https://cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-win_x64.zip"
              ]
            }
          },
          "remotejdk21_linux_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_linux_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "1fb64b8036c5d463d8ab59af06bf5b6b006811e6012e3b0eb6bccf57f1c55835",
              "strip_prefix": "zulu21.28.85-ca-jdk21.0.0-linux_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-linux_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-linux_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk11_linux_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_s390x": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_s390x",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "a58fc0361966af0a5d5a31a2d8a208e3c9bb0f54f345596fd80b99ea9a39788b",
              "strip_prefix": "jdk-11.0.15+10",
              "urls": [
                "https://mirror.bazel.build/github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_s390x_linux_hotspot_11.0.15_10.tar.gz",
                "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_s390x_linux_hotspot_11.0.15_10.tar.gz"
              ]
            }
          },
          "remotejdk17_linux_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "6531cef61e416d5a7b691555c8cf2bdff689201b8a001ff45ab6740062b44313",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-linux_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk17_win_arm64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_win_arm64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win_arm64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win_arm64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "a34b404f87a08a61148b38e1416d837189e1df7a040d949e743633daf4695a3c",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-linux_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_x64.tar.gz"
              ]
            }
          },
          "remotejdk11_macos_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_macos_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos//:jdk\",\n)\n"
            }
          },
          "remotejdk17_linux_ppc64le_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_ppc64le_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_ppc64le//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_ppc64le//:jdk\",\n)\n"
            }
          },
          "remotejdk17_win_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_win_arm64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "6802c99eae0d788e21f52d03cab2e2b3bf42bc334ca03cbf19f71eb70ee19f85",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-win_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_aarch64.zip",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_aarch64.zip"
              ]
            }
          },
          "remote_java_tools_darwin_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remote_java_tools_darwin_arm64",
              "sha256": "dab5bb87ec43e980faea6e1cec14bafb217b8e2f5346f53aa784fd715929a930",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.1/java_tools_darwin_arm64-v13.1.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.1/java_tools_darwin_arm64-v13.1.zip"
              ]
            }
          },
          "remotejdk17_linux_ppc64le": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_ppc64le",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "00a4c07603d0218cd678461b5b3b7e25b3253102da4022d31fc35907f21a2efd",
              "strip_prefix": "jdk-17.0.8.1+1",
              "urls": [
                "https://mirror.bazel.build/github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_ppc64le_linux_hotspot_17.0.8.1_1.tar.gz",
                "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_ppc64le_linux_hotspot_17.0.8.1_1.tar.gz"
              ]
            }
          },
          "remotejdk21_linux_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_linux_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_win_arm64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_win_arm64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win_arm64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win_arm64//:jdk\",\n)\n"
            }
          },
          "local_jdk": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:local_java_repository.bzl",
            "ruleClassName": "_local_java_repository_rule",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~local_jdk",
              "java_home": "",
              "version": "",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = {RUNTIME_VERSION},\n)\n"
            }
          },
          "remote_java_tools_darwin_x86_64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remote_java_tools_darwin_x86_64",
              "sha256": "0db40d8505a2b65ef0ed46e4256757807db8162f7acff16225be57c1d5726dbc",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.1/java_tools_darwin_x86_64-v13.1.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.1/java_tools_darwin_x86_64-v13.1.zip"
              ]
            }
          },
          "remote_java_tools": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remote_java_tools",
              "sha256": "286bdbbd66e616fc4ed3f90101418729a73baa7e8c23a98ffbef558f74c0ad14",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.1/java_tools-v13.1.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.1/java_tools-v13.1.zip"
              ]
            }
          },
          "remotejdk17_linux_s390x": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_s390x",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "ffacba69c6843d7ca70d572489d6cc7ab7ae52c60f0852cedf4cf0d248b6fc37",
              "strip_prefix": "jdk-17.0.8.1+1",
              "urls": [
                "https://mirror.bazel.build/github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_s390x_linux_hotspot_17.0.8.1_1.tar.gz",
                "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_s390x_linux_hotspot_17.0.8.1_1.tar.gz"
              ]
            }
          },
          "remotejdk17_win_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_win_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_ppc64le": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_ppc64le",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "a8fba686f6eb8ae1d1a9566821dbd5a85a1108b96ad857fdbac5c1e4649fc56f",
              "strip_prefix": "jdk-11.0.15+10",
              "urls": [
                "https://mirror.bazel.build/github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_ppc64le_linux_hotspot_11.0.15_10.tar.gz",
                "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_ppc64le_linux_hotspot_11.0.15_10.tar.gz"
              ]
            }
          },
          "remotejdk11_macos_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_macos_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "7632bc29f8a4b7d492b93f3bc75a7b61630894db85d136456035ab2a24d38885",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-macosx_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk21_win_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_win_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_win//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_win//:jdk\",\n)\n"
            }
          }
        }
      }
    }
  }
}
